<?xml version="1.0"?>
<!--
  For more information on how to configure your ASP.NET application, please visit
  http://go.microsoft.com/fwlink/?LinkId=152368
  -->

<configuration>
  <configSections>
    <section name="unity"  type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Microsoft.Practices.Unity.Configuration"/>
  </configSections>

  <unity xmlns="http://schemas.microsoft.com/practices/2010/unity">

    <!--<alias alias="AuthorizationService" type="Vaiona.Web.Security.Az.IAuthorizationService, Vaiona.Web.Security" />-->
    <!--<alias alias="RuleBasedAuthorizationImpl" type="Vaiona.Web.Security.Az.RuleBasedAuthorization, Vaiona.Web.Security" />-->

    <alias alias="PersistenceManager"     type="Vaiona.Persistence.Api.IPersistenceManager, Vaiona.Persistence.Api" />
    <alias alias="NHPersistenceManager"   type="Vaiona.PersistenceProviders.NH.NHibernatePersistenceManager, Vaiona.PersistenceProviders.NH" />

    <!--<alias alias="SearchProvider"         type="BExIS.Ddm.Api.ISearchProvider, BExIS.Ddm.Api" />-->
    <!--<alias alias="LuceneSearchProvider"   type="BExIS.Ddm.Providers.LuceneProvider.SearchProvider, BExIS.Ddm.Providers.LuceneProvider" />-->

    <alias alias="Logger"                 type="Vaiona.Logging.ILogger, Vaiona.Logging" />
    <alias alias="DatabaseLogger"         type="Vaiona.Logging.Loggers.DatabaseLogger, Vaiona.Logging" />

    <alias alias="TenantRegistrar"        type="Vaiona.MultiTenancy.Api.ITenantRegistrar, Vaiona.MultiTenancy.Api" />
    <alias alias="DefaultTenantRegistrar" type="Vaiona.MultiTenancy.Services.TenantRegistrar, Vaiona.MultiTenancy.Services" />

    <alias alias="TenantResolver"         type="Vaiona.MultiTenancy.Api.ITenantResolver, Vaiona.MultiTenancy.Api" />
    <alias alias="DefaultTenantResolver"  type="Vaiona.MultiTenancy.Services.TenantResolver, Vaiona.MultiTenancy.Services" />

    <alias alias="ModuleSeedDataGenerator" type="Vaiona.Web.Mvc.Modularity.IModuleSeedDataGenerator,  Vaiona.Web.Mvc.Modularity" />
    <alias alias="ShellSeedDataGenerator"  type="BExIS.Utils.Data.Helpers.ShellSeedDataGenerator, BExIS.Utils.Data" />

    <alias alias="GeneralSettings"        type="BExIS.Web.Shell.Helpers.GeneralSettings,  BExIS.Web.Shell" />

    <container name="DefaultContainer">

      <!-- lifetime: singleton, transient, hierarchical, external, per thread-->
      
      <!--<register type="AuthorizationService" mapTo="RuleBasedAuthorizationImpl">
        <lifetime type="singleton" />
      </register>-->
      <register type="ModuleSeedDataGenerator" mapTo="ShellSeedDataGenerator">
        <lifetime type="transient" />
      </register>

      <register type="TenantRegistrar" mapTo="DefaultTenantRegistrar">
        <lifetime type="singleton" />
      </register>
      <register type="TenantResolver" mapTo="DefaultTenantResolver">
        <lifetime type="singleton" />
      </register>

      <register type="PersistenceManager" mapTo="NHPersistenceManager">
        <lifetime type="singleton" />       
      </register>

      <register type="GeneralSettings" mapTo="GeneralSettings">
        <lifetime type="singleton" />
      </register>

      <!--this item uses session level container, so singleton here means one object per session -->
      <!--<register type="SearchProvider" mapTo="LuceneSearchProvider">
        <lifetime type="hierarchical" />
      </register>-->

      <!-- by adding more aliases, it is possible to have different loggers for each log type. log types are:
          Diagnosis, Performance, Trace, Exception, Data, Custom.
          The registration with "General.Logging" key acts as the fallback, if no specific key is defined for a log type
      -->
      <register type="Logger" mapTo="DatabaseLogger" name="Diagnostics.Logging">
        <lifetime type="singleton" />
      </register>

      <register type="Logger" mapTo="DatabaseLogger" name="General.Logging">
        <lifetime type="singleton" />
      </register>

    </container>

  </unity>

</configuration>
