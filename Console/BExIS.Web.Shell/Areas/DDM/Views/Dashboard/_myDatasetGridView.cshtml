@model System.Data.DataTable
@using BExIS.Utils.Models;
@using System.Data;
@using BExIS.Dlm.Entities.DataStructure;
@using Telerik.Web.Mvc.UI;




@section Information
{
	<p>This table contains all datasets, created by you as a current logged on user. </p>
	<p>By right clicking on the header, you can manage the visibility of columns. You can also use filtering or grouping to see the more operative informations.</p>
	<p>To view more details of a dataset, click the <strong>View details</strong> button available in each row.</p>   
}

@{
	int PageSize = 10;
	int CurrentPage = 1;
	
	if (ViewData["PageSize"] != null)
	{
		PageSize = Convert.ToInt16(ViewData["PageSize"]);	    
	}
	
	if (ViewData["CurrentPage"] != null)
	{
		CurrentPage = Convert.ToInt16(ViewData["CurrentPage"]);	    
	}
	
	List<HeaderItem> DefaultHeaderList = (List<HeaderItem>)ViewData["DefaultHeaderList"];
	HeaderItem Id = (HeaderItem)ViewData["Id"];


	StructuredDataStructure sds = new StructuredDataStructure();
	Tuple<StructuredDataStructure, long> defaultModel = new Tuple<StructuredDataStructure, long>(sds, 0);


	GridPagerStyles pagerStyles = GridPagerStyles.PageSizeDropDown;
	pagerStyles |= GridPagerStyles.NextPreviousAndNumeric;
	pagerStyles |= GridPagerStyles.Numeric;

  
}


@(Html.Telerik().Grid<System.Data.DataRow>()
		.Name("resultGrid")

			.DataBinding(dataBinding => dataBinding
				.Ajax()
				.Select("_CustomMyDatasetBinding", "Dashboard", new { area = "ddm" })
			)
			.EnableCustomBinding(true)
			.HtmlAttributes(new { @class = "result-grid" })
			.Columns(columns =>
			{

				for (int i = 0; i < Model.Columns.Count; i++)
				{
					DataColumn column = Model.Columns[i];
					if (DefaultHeaderList.Where(p => p.Name.Equals(column.ColumnName)).Count() > 0)
					{

						string title;

						if (column.Caption == "")
						{
							title = column.ColumnName;
						}
						else
						{
							title = column.Caption;
						}
						if (title == "ID")
						{
							columns.Bound(column.DataType, column.ColumnName)
							   .Title(title);
						}
						if (title == "Title")
						{
							columns.Bound(column.DataType, column.ColumnName)
							   .Title(title);
						}
						if (title == "Description")
						{
							columns.Bound(column.DataType, column.ColumnName)
							   .Title(title);
						}
						if (title == "Read" | title == "Write" | title == "Delete" | title == "Download" | title == "Grant")
						{
							columns.Bound(column.DataType, column.ColumnName)
							   .Title(title)
							   .Filterable(false);
						}
					}
					else
					{
						columns.Bound(column.DataType, column.ColumnName).Hidden()
							   .Title(column.Caption);
					}

				}
				if (@Model.Columns.Count > 0)
				{
					columns.Bound("").Width(70).ClientTemplate(
					"<div class='searchResultFunctionDiv'>" +
						"<a  id='<#= " + @Model.Columns[Id.Name].ColumnName + "#>' class = 'bx bx-grid-function bx-show' title = 'View details' onclick='onclickDataset(this)'></a>" +

						//@Html.ActionLink(" ", "ShowData", "Data", new { area = "ddm", id = "<#= " + @Model.Columns[Id.Name].ColumnName + "#>" }, new { @class = "bx bx-grid-function bx-show", @id = "<#= " + @Model.Columns[Id.Name].ColumnName + "#>", title = "View details" }) +
						@Html.ActionLink(" ", "Index", "CreateDataset", new { area = "dcm", id = "<#= " + @Model.Columns[Id.Name].ColumnName + "#>", type = "DatasetId" }, new { @class = "bx bx-grid-function bx-copy", @id = "<#= " + @Model.Columns[Id.Name].ColumnName + "#>", title = "Copy dataset" }) +
					 "</div>"
					)
					.Groupable(false)
					.Sortable(false)
					.Filterable(false);
				}

			})

			.ClientEvents(events => events
						.OnComplete("onComplete")
						.OnLoad("refreshGrid")
						.OnSubmitChanges("refreshGrid")
						.OnRowDataBound("resultGrid_OnRowDataBound")
						.OnDataBound("resultGrid_onDataBound")

					   )
			.Pageable(paging =>
				paging
					.Style(pagerStyles)
					.PageSize(PageSize)
					.Position(GridPagerPosition.Both)
					.PageTo(CurrentPage)
					)

			.Sortable()
			.Filterable()
			.ColumnContextMenu()
)

<script type="text/javascript">

	$('document').ready(function () {

		$('.t-filter').attr("title", "Filter");
		resetAllTelerikIconTitles();
	})

	function resultGrid_onDataBound() {

		resetAllTelerikIconTitles();

		$(".t-grid").trigger('load');
	}

	function resultGrid_OnRowDataBound(e) {

		//alert(e.item);
		var obj = e.row.childNodes;

		$.each(obj, function (i) {

			obj[i].title = obj[i].textContent;
			if (obj[i].textContent.length > 50) {
				obj[i].textContent = jQuery.trim(obj[i].textContent).substring(0, 50).trim(this) + "...";
			}
		});
	}

	function onComplete() {


	}

	function onclickDataset(e) {

		// checked
		var id = e.getAttribute("id");


		var data = {
			id: id
		}

		$.ajax({
			url: '/ddm/Data/IsDatasetCheckedIn',
			type: 'POST',
			data: JSON.stringify(data),
			dataType: 'json',
			contentType: 'application/json; charset=utf-8',
			error: function (xhr) {
				alert('Error: ' + xhr.statusText);

			},
			success: function (result) {
				if (result) {
					window.top.location = "/ddm/Data/ShowData/" + id;
				} else {

					alert("Dataset is locked. Please try again later.");
				}
			}
		});
	}


	function refreshGrid() {
		//$(".t-grid .t-refresh").trigger('click');
		//$(".t-grid .t-refresh").trigger('click');
		/*alert("GridRefresh");*/
	}


</script>

<style type="text/css">

	#resultGrid .t-grid-content
	{
		position:relative;
		height : auto !important;
		max-height:450px;
		/*overflow:auto;*/
	}

	#resultGrid .t-status
	{
	   display:none;
	}

</style>