@model BExIS.Web.Shell.Areas.DDM.Models.ShowPrimaryDataModel
@using System.ComponentModel.DataAnnotations
@using System.Data;
@using BExIS.Dlm.Entities.DataStructure;
@using BExIS.Web.Shell.Areas.DDM.Models
@using Telerik.Web.Mvc.UI;

@{
    ViewBag.Title = "Primary Data";

    bool fullDataset = false;

    long id = Model.DatasetId;
    StructuredDataStructure dataStructure = (StructuredDataStructure)Model.DataStructure;

    GridPagerStyles pagerStyles = GridPagerStyles.PageSizeDropDown;
    pagerStyles |= GridPagerStyles.NextPreviousAndNumeric;
    pagerStyles |= GridPagerStyles.Numeric;


    int total = 0;
    if (Session["gridTotal"] != null)
    {
        total = Convert.ToInt32(Session["gridTotal"]); //  (int)Session["gridTotal"];
    }

    string compareValues = String.Join(",", Model.CompareValuesOfDataTypes.ToArray());


}


@section Scripts{
	<link href="@Url.Content(Themes.GetResourcePath("Styles", "images.css"))" rel="stylesheet" type="text/css" />
	<script type="text/javascript" src="/Areas/DDM/Scripts/ddm.js"></script>
	@*<script type="text/javascript" src="/Areas/DDM/Views/Shared/ddm.js"></script>*@
}

@section information
{
    <p>To download the entire dataset choose one of the following formats.</p>

    <p>Note: If you are the first one to download this dataset it may take a
        little longer, because the file has to be created.</p>
<p>
    <a href="/DCM/Help/Index/#_Toc451435014" class="bx-informationLink" title="go to help" target="_blank">More</a>
</p>
}
<div id="downloadOptions" style="text-align:left;">

    @if (Model.DownloadAccess && Model.Data != null && Model.Data.Rows.Count > 0)
    { 
		   @Html.ActionLink("Download Excel", "DownloadAsExcelData", "Data", new { id = @Model.DatasetId }, new { area = "DDM", @class = "bx-button function", title = "Xlsx download" })

		   @Html.ActionLink("Download Comma Separated", "DownloadAsCsvData", "Data", new { id = @Model.DatasetId }, new { area = "DDM", @class = "bx-button function", title = "Csv download" })

		   @Html.ActionLink("Download Tab Separated", "DownloadAsTxtData", "Data", new { id = @Model.DatasetId }, new { area = "DDM", @class = "bx-button function", title = "Text download" })
		  
		  @* @Html.CheckBox("DownLoadFullDataset", new { text = "Download full dataset", @id = "fullDatasetDownload" }) @Html.Label("Download full dataset")*@
    }
    else
    {
        
           <button title="Download Excel" 
               name="Download Excel" 
               class="t-button t-state-disabled margin" 
               disabled="disabled"
               >Download Excel</button>
           <button title="Download Comma Separated" 
               name="Download Comma Separated" 
               class="t-button t-state-disabled margin" 
               disabled="disabled"
               >Download Comma Separated</button>
           <button title="Download Tab Separated" 
               name="Download Tab Separated" 
               class="t-button t-state-disabled margin" 
               disabled="disabled"
               >Download Tab Separated</button>
           @*<input type="checkbox"  disabled="disabled" >Download full dataset</input>*@
    }
    
</div>
<br />
@(Html.Telerik().Grid(Model.Data)
        .Name("PrimaryDataResultGrid")
            .DataBinding(dataBinding => dataBinding
                    .Ajax()
                    .Select("_CustomPrimaryDataBinding", "Data", new RouteValueDictionary { { "area", "DDM" }, { "datasetID", id } })
                    .OperationMode(GridOperationMode.Server)
                 )

                .EnableCustomBinding(true)
                .HtmlAttributes(new { @class = "primaryDataResultGrid" })
                .ClientEvents(events => events
                         .OnLoad("PrimaryDataResultGrid_OnLoad")
                         .OnDataBound("PrimaryData_OnCommand")
                         .OnColumnHide("PrimaryData_OnCommand")
                         .OnColumnShow("PrimaryData_OnCommand")
                    )
            .Columns(columns =>
            {
                for (int i = 0; i < Model.Data.Columns.Count; i++)
                {

                    DataColumn column = Model.Data.Columns[i];

                    string title;

                    if (column.Caption == "")
                    {
                        title = column.ColumnName;
                    }
                    else
                    {
                        title = column.Caption;
                    }

                    DisplayFormatObject dfo = Model.DisplayFormats.Where(o=>o.Column.Equals(title)).FirstOrDefault();
                    string format = "";

                    if (dfo != null && !string.IsNullOrEmpty(dfo.Format))
                    {
                        //string unit = "";
                        //if (dfo.Unit != "None") unit = dfo.Unit;

                        format = "{0:" + dfo.Format +"}";

                        columns.Bound(column.DataType, column.ColumnName)
                           .Title(title).Format(format);
                    }
                    else
                    {
                        columns.Bound(column.DataType, column.ColumnName)
                           .Title(title);
                    }
                }
            })


            .Pageable(paging =>
                paging.PageSize(20,new int[]{10,20,50,100,500})
                    .Style(pagerStyles)
                    .Position(GridPagerPosition.Both)
                    .Total(total)
                    )
//.Sortable()
//.Filterable()
//.ColumnContextMenu()
//.Groupable()

)

<br />


<script type="text/javascript">


    $(document).ready(function(){
    
        OnDataBound();
    })

	$("#fullDatasetDownload").change(function () {
			var subset = $('#fullDatasetDownload').is(":checked");

			$.post('@Url.Action("SetFullDatasetDownload", "Data", new RouteValueDictionary { { "area", "DDM" } })', { subset: subset }, function (response) {

		})
	});

	function PrimaryDataResultGrid_OnLoad(e) {
		$('.t-grid .t-status').hide();
	}

	function PrimaryData_OnCommand(e) {

	var grid = $("#PrimaryDataResultGrid").data("tGrid");

	var columns = grid.columns;

	var currentFilter = grid.filterBy;
	var currentOrder = grid.orderBy;

	var visibleColumns ="";
	jQuery.each(columns, function (index) {
		if (!this.hidden) {
			if (visibleColumns != "")

				visibleColumns += "," + this.member;
			else
				visibleColumns = this.member;
		}
	});

	    @*$.post('@Url.Action("SetGridCommand", "Data", new RouteValueDictionary { { "area", "DDM" } })', { filters: currentFilter, orders: currentOrder, columns: visibleColumns }, function (response) {
	    //alert("set grid");
	    OnDataBound();
	})*@

	    resetAllTelerikIconTitles();
	    addTooltips();

	}

    function OnDataBound()
    {
        addTooltips();
        resetAllTelerikIconTitles();

        var compareValuesString = '@compareValues'
        var compareValuesArray = compareValuesString.split(",")

        $("#PrimaryDataResultGrid td").each(function () {

            for (var i = 0; i < compareValuesArray.length; i = i + 1) {

                if (this.innerHTML == compareValuesArray[i]) {
                   this.innerHTML = " ";
                }
            }
        })

        $("#PrimaryDataResultGrid .t-grouping-row .t-reset").each(function () {

            var valueArray = this.innerHTML.split(": ");
            //alert(valueArray);
            var value =  valueArray[valueArray.length-1];

            //alert(value);
            for (var i = 0; i < compareValuesArray.length; i = i + 1) {

                if (value == compareValuesArray[i]) {

                    var newValue = valueArray[0] + ": ";
                    this.innerHTML = newValue;
                }
            }

        })

    }

</script>

<style type="text/css">

	.primaryDataResultGrid .t-grid-content
	{
		height : auto !important;
       
	}

    .primaryDataResultGrid .t-grid-content td
    {
        padding-left:0;
        text-align:left;
    }

    .margin
    {
        margin-left:2px;
    }

</style>    




