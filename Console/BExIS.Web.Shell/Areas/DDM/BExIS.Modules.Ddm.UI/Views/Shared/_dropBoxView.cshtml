@using Telerik.Web.Mvc.UI;

@model BExIS.Utils.Models.Property

    <div>

        <p class="PropertyHeader">@Model.DisplayName</p>

        @{
            string value = "";
            int i = 0;

            if (!string.IsNullOrEmpty(Model.SelectedValue))
            {
                i = Model.Values.ToList().IndexOf(Model.SelectedValue)+1;
            }

            string controller = Session["Controller"].ToString();
        }

        @if (this.Session["PropertiesDictionary"] as Dictionary<string, string> != null)
        {
            Dictionary<string, string> dic = this.Session["PropertiesDictionary"] as Dictionary<string, string>;
            value = ((dic != null && dic.ContainsKey(Model.DataSourceKey)) ? dic[Model.DataSourceKey] : Model.DefaultValue); //HtmlHelpers.GetSelectedValueInDictionary(Model.DataSourceKey, Model.DefaultValue, this.Session["PropertiesDictionary"] as Dictionary<string, string>);
        }

        @if (value == "" || this.Session["PropertiesDictionary"] as Dictionary<string, string> == null)
        {
            value = Model.DefaultValue;
        }

        @if (Model.Values.Count() > 0)
        {
            @(Html.Telerik().DropDownList()
                            .Name(Model.DataSourceKey)
                            .Placeholder("Select, please")
                            .SelectedIndex(i)
                            .BindTo(new SelectList(Model.Values))
                        .ClientEvents(events => events
                        .OnChange("onChange"))
            )
        }
    </div>
<script type="text/javascript">
    function onChange(e) {

        var value = e.value;
        var node = e.currentTarget.name;

        //alert(value + "," + e.currentTarget);
        $("#" + e.currentTarget.id).prop("selectedIndex");

        $.post('@Url.Action("FilterByDropDown", @controller, new RouteValueDictionary { { "area", "ddm" } })', { value: value, node: node }, function (response) {
            //alert(response);
            console.log("update header");
            //console.log(response);
            $(".searchBreadcrumbNavigation").html(response);

            $.post('@Url.Action("UpdateProperties", @controller, new RouteValueDictionary { { "area", "ddm" } })', {}, function (response) {
                console.log("update Properties");
                console.log(response);
                $("#searchProperties").html(response);
            })

        });

        $.post('@Url.Action("UpdateFacets", @controller, new RouteValueDictionary { { "area", "ddm" } })', {}, function (response) {
            console.log("update facets");
            console.log(response);
            $("#searchTreeView").html(response);
        })

        refreshGrid();
    }
</script>