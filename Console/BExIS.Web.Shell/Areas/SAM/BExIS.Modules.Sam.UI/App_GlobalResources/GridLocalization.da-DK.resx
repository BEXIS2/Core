<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddNew" xml:space="preserve">
    <value>Tilføj ny række</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Slet</value>
    <comment>Was "Delete", which is not a Danish word</comment>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Fortryd</value>
  </data>
  <data name="Update" xml:space="preserve">
    <value>Opdatér</value>
  </data>
  <data name="Insert" xml:space="preserve">
    <value>Indsæt</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Redigér</value>
  </data>
  <data name="Select" xml:space="preserve">
    <value>Vælg</value>
  </data>
  <data name="Page" xml:space="preserve">
    <value>Side</value>
  </data>
  <data name="DisplayingItems" xml:space="preserve">
    <value>Viser rækker {0} - {1} af {2}</value>
  </data>
  <data name="PageOf" xml:space="preserve">
    <value>af {0}</value>
  </data>
  <data name="Filter" xml:space="preserve">
    <value>Filter</value>
  </data>
  <data name="FilterAnd" xml:space="preserve">
    <value>Og</value>
  </data>
  <data name="FilterClear" xml:space="preserve">
    <value>Fjern filter</value>
  </data>
  <data name="FilterDateEq" xml:space="preserve">
    <value>Er lig med</value>
  </data>
  <data name="FilterDateGe" xml:space="preserve">
    <value>Er senere end eller lig med</value>
    <comment>"Senere" is a better word for "later" than "efter" when talking about dates</comment>
  </data>
  <data name="FilterDateGt" xml:space="preserve">
    <value>Er senere end</value>
    <comment>"Senere" is a better word for "later" than "efter" when talking about dates</comment>
  </data>
  <data name="FilterDateLe" xml:space="preserve">
    <value>Er før eller lig med</value>
  </data>
  <data name="FilterDateLt" xml:space="preserve">
    <value>Er før</value>
  </data>
  <data name="FilterDateNe" xml:space="preserve">
    <value>Er ikke lig med</value>
  </data>
  <data name="FilterNumberEq" xml:space="preserve">
    <value>Er lig med</value>
  </data>
  <data name="FilterNumberGe" xml:space="preserve">
    <value>Er større end eller lig med</value>
  </data>
  <data name="FilterNumberGt" xml:space="preserve">
    <value>Er større end</value>
  </data>
  <data name="FilterNumberLe" xml:space="preserve">
    <value>Er mindre end eller lig med</value>
  </data>
  <data name="FilterNumberLt" xml:space="preserve">
    <value>Er mindre end</value>
  </data>
  <data name="FilterNumberNe" xml:space="preserve">
    <value>Er forskellig fra</value>
    <comment>"Forskellig fra" is a more direct way of saying "ikke lig med"</comment>
  </data>
  <data name="FilterShowRows" xml:space="preserve">
    <value>Vis rækker med en værdi der</value>
  </data>
  <data name="FilterStringEndsWith" xml:space="preserve">
    <value>Slutter med</value>
  </data>
  <data name="FilterStringEq" xml:space="preserve">
    <value>Er lig med</value>
  </data>
  <data name="FilterStringNe" xml:space="preserve">
    <value>Er forskellig fra</value>
    <comment>"Forskellig fra" is a more direct way of saying "ikke lig med"</comment>
  </data>
  <data name="FilterStringStartsWith" xml:space="preserve">
    <value>Begynder med</value>
    <comment>"Begynder" is a better word than "Starter" in this context</comment>
  </data>
  <data name="FilterStringSubstringOf" xml:space="preserve">
    <value>Indeholder</value>
  </data>
  <data name="GroupHint" xml:space="preserve">
    <value>Træk en kolonneoverskrift herover for at gruppére på den kolonne</value>
  </data>
  <data name="FilterEnumEq" xml:space="preserve">
    <value>Er lig med</value>
  </data>
  <data name="FilterEnumNe" xml:space="preserve">
    <value>Er ikke lig med</value>
  </data>
  <data name="DeleteConfirmation" xml:space="preserve">
    <value>Er du sikker på, at du ønsker at slette denne række?</value>
    <comment>Missing a comma</comment>
  </data>
  <data name="FilterSelectValue" xml:space="preserve">
    <value>-Vælg værdi-</value>
  </data>
  <data name="FilterBoolIsFalse" xml:space="preserve">
    <value>er falskt</value>
  </data>
  <data name="FilterBoolIsTrue" xml:space="preserve">
    <value>er sandt</value>
  </data>
  <data name="NoRecords" xml:space="preserve">
    <value>Ingen rækker at vise.</value>
  </data>
  <data name="CancelChanges" xml:space="preserve">
    <value>Fortryd ændringer</value>
  </data>
  <data name="SaveChanges" xml:space="preserve">
    <value>Gem ændringer</value>
  </data>
  <data name="Refresh" xml:space="preserve">
    <value>Opdatér</value>
  </data>
  <data name="SortedAsc" xml:space="preserve">
    <value>stigende rækkefølge</value>
    <comment>"Rækkefølge" is better than "orden"</comment>
  </data>
  <data name="SortedDesc" xml:space="preserve">
    <value>faldende rækkefølge</value>
    <comment>"Rækkefølge" is better than "orden"</comment>
  </data>
  <data name="UnGroup" xml:space="preserve">
    <value>fjern gruppéring</value>
  </data>
</root>