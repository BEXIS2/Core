@using BExIS.Modules.Sam.UI.Models
@using Telerik.Web.Mvc.UI

@(Html.Telerik().Grid<DecisionGridRowModel>()
    .Name("grid_decisions")
    .Columns(columns =>
    {
    columns.Bound(g => g.InstanceId);
    columns.Bound(g => g.Title);
    columns.Bound(g => g.Applicant);
    columns.Bound(g => g.Rights);
    columns.Bound(g => g.Intention);
    columns.Bound(g => g.StatusAsText);
    columns.Template(@<text>
                <button type="button" class="bx bx-grid-function bx-check" @(item.Status != 0 ? "disabled" : "")></button>
                <button type="button" class="bx bx-grid-function bx-delete" @(item.Status != 0 ? "disabled" : "")></button>
    </text>)
.ClientTemplate(
"<button type=\"button\" class=\"bx bx-grid-function bx-check <#= Status!=0 ? 'bx-disabled' : '' #> \" value=\"<#= Id #>\" title=\"Grant\" <#= Status!=0 ? 'disabled' : '' #> ></button>" +
"<button type=\"button\" class=\"bx bx-grid-function bx-delete <#= Status!=0 ? 'bx-disabled' : '' #> \" value=\"<#= Id #>\" title=\"Deny\" <#= Status!=0 ? 'disabled' : '' #> ></button>")
.Width(75);
})
.ClientEvents(events =>
{
events.OnDataBound("grid_decisions_onDataBound");
})
.DataBinding(dataBinding => dataBinding
.Ajax()
.OperationMode(GridOperationMode.Server)
.Select("Decisions_Select", "Requests", new { EntityId = Model })
)
.EnableCustomBinding(true)
.Filterable()
.Pageable(pageable =>
{
pageable.PageSize(10, new[] { 10, 20, 50, 100 });
pageable.Style(GridPagerStyles.NextPreviousAndNumeric | GridPagerStyles.PageSizeDropDown);
pageable.Position(GridPagerPosition.Both);
})
.Sortable(sortable => sortable.OrderBy(order => order.Add(c => c.Id).Descending())))