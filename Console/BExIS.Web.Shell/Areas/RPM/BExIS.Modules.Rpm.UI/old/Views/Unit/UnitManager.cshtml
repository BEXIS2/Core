@using Telerik.Web.Mvc.UI
@using BExIS.Dlm.Entities.DataStructure
@using BExIS.Dlm.Services.DataStructure
@using System
@using System.Text.RegularExpressions
@using BExIS.Modules.Rpm.UI.Controllers
@model BExIS.Modules.Rpm.UI.Models.UnitManagerModel

@*<header>*@
    <link href="@Url.Content("~/Areas/RPM/Stylesheets/RPM.css")" rel="stylesheet" type="text/css" />
@*</header> *@

@{
    string temp = "";

    string windowName = "Create Unit";

    if (Model.EditUnitModel.Unit != new Unit())
    {
        if (!string.IsNullOrEmpty(Model.EditUnitModel.Unit.Name))
        {
            windowName = "Edit Unit: " + Model.EditUnitModel.Unit.Name + " (Id: " + Model.EditUnitModel.Unit.Id + ")";
        }
    }

}

@*@{
    ViewBag.Title = "Unit Manager";
}*@

@section Scripts{

}

@section Information
{
    With this interface you are able to manage (e.g. create, edit, delete) units which may be needed to define data attributes. Units cannot be edited or deleted once they are associated with a data attribute (they become locked).
    <p>
    <a href="/RPM/Help/Index/#_Toc434570750" class="bx-informationLink" title="go to help" target="_blank">More</a>
</p>
}

<div title="Create a new Unit" class="bx-rpm-buttons">
    @Html.ActionLink("Create Unit", "openUnitWindow", "Unit", new { id = 0 }, new { @class = "bx-button function" })
</div>

    @(Html.Telerik().Grid(Model.editUnitModelList)
            .Name("bx-rpm-unitGrid")
            .Filterable()
            .Sortable()
            .Columns(columns =>
            {
                columns.Bound(c => c.Unit.Id)
                    .Width(100);
                columns.Bound(c => c.Unit.Name);
                columns.Bound(c => c.Unit.Abbreviation);
                columns.Bound(c => c.Unit.Dimension.Name).Title("Dimension Name");
                columns.Bound(c => c.Unit.MeasurementSystem);
                columns.Template(
                    @<text>
                            @{
                                temp = "";
                                if (item.Unit.Name.ToLower() == "none")
                                {
                                    temp = "All Data Types";
                                    }
                                else
                                {
                                    foreach (DataType dt in item.Unit.AssociatedDataTypes.OrderBy(p => p.Name).ToList())
                                    {
                                        if (temp == "")
                                        { temp = dt.Name; }
                                        else
                                        { temp = temp + ", " + dt.Name; }
                                    }
                                }
                                }
                              @temp
                        </text>
                    )
                    .Title("Associated Data Types");
                columns.Bound(c => c.Unit.Description)
                                    .HtmlAttributes(new { @style ="max-width:500px" });
                columns.Template(
                    @<text>

                            @if (item.inUse)
                            {
                                <div>
                                    <div class = "bx bx-grid-function bx-edit bx-disabled" disabled = "disabled" title = 'Edit Unit "@item.Unit.Name"'></div>
                                    <div class = "bx bx-grid-function bx-trash bx-disabled" disabled = "disabled" title = 'Delete Unit "@item.Unit.Name"'></div>
                                </div>
                            }
                            else
                            {
                                <div>
                                    @Html.ActionLink(" ", "openUnitWindow", "Unit", new { id = item.Unit.Id }, new { @class = "bx bx-grid-function bx-edit ", title = "Edit Unit \"" + item.Unit.Name + "\"" })
                                    @Html.ActionLink(" ", "deletUnit", "Unit", new { id = item.Unit.Id }, new { @class = "bx bx-grid-function bx-trash",title = "Delete Unit \""+item.Unit.Name+"\"", onclick = "return confirm('Are you sure you want to delete the Unit " + item.Unit.Name + " ?')" })
                                </div>
                            }
                        </text>
                ).Title("")
                    .Width(70)
                    .ClientTemplate(
                        @Html.ActionLink(" ", "openUnitWindow", "Unit", new { id = "<#= id #>" }, new { @class = "bx bx-grid-function bx-edit" }).ToHtmlString() +
                        @Html.ActionLink(" ", "deletUnit", "Unit", new { id = "<#= id #>" }, new { @class = "bx bx-grid-function bx-trash", onclick = "return confirm('Are you sure you want to delete the Unit " + Model.EditUnitModel.Unit.Name + " ?')" }).ToHtmlString()
                        );
            })
            .ClientEvents(events=>events.OnDataBound("onDataBound"))
            )

    <div style="position:absolute; left:calc(50% - 508px); top:15%;">
                    @{ Html.Telerik().Window()
                            .Name("UintWindow")
                            .Title(windowName)
                            .ClientEvents(events => events.OnClose("close"))
                            .Draggable(true)
                            .Modal(true)
                            .Visible((bool)Session["Window"])
                            .Content(@<text>
                                        @Html.Partial("_editUnit", Model.EditUnitModel)
                                        </text>)
                            .Render()
                            ;

                    }
    </div>
@{Session["Window"] = false;}

<script type="text/javascript">

    function onDataBound()
    {
        addTooltips();
    }

    function close(e)
    {
        checkedIDs = new Array(0);
        var data = { checkedIDs: checkedIDs };
        $.ajax({
            url: '/RPM/Unit/setChecked',
            type: 'POST',
            data: JSON.stringify(data),
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            error: function (xhr) {
                //alert('Error: ' + xhr.statusText);
            },
            success: function (result) {
                //alert("success");
            },
            async: true,
            processData: false
        });

        window.location.href = '/RPM/Unit/UnitManager';
    }
</script>

@*<script type="text/javascript">

    $(".test")
        .click(function () {
            $('<div style="background-color: yellow;"></div>')
                .html('<div><h6> You are trying to delete! </h6></div>')
                .dialog({
                    modal: true, title: 'message', autoOpen: true,
                    width: '200', height: '150', resizable: false,
                    buttons: {
                        OK: function () {
                            $.post
                            $(this).remove();
                            $deletUnit();
                            doFunctionForOK();
                        },
                        Cancel: function () {
                            $(this).remove();
                            $(".test").val(false);
                        }
                    }
                });
        })
        .hover(function () {
            $(this).html("<b>test</b>")
        }, function () {
            $(this).text("test");
        });
</script>*@