@using Telerik.Web.Mvc.UI
@using BExIS.Dlm.Entities.DataStructure
@using BExIS.Dlm.Entities.Data
@using BExIS.Dlm.Services.DataStructure
@using BExIS.Dlm.Services.Data
@model BExIS.Modules.Rpm.UI.Models.DataStructureDesignerModel

@{   

    List<string> CategoryList = new List<string>();
    int categoryIndex = 0;
    foreach (DataStructureCategory tc in Enum.GetValues(typeof(DataStructureCategory)))
    {
        CategoryList.Add(tc.ToString());
    }

    List<string> errorMsg = new List<string>();

    if (ViewData["errorMsg"] != null)
    {
        errorMsg = (List<string>)ViewData["errorMsg"];
    }
    // need DataStructureCategory to create DS but can't find it in a DS    
}

<h3>
@{
    if (Model.dataStructure.Id != 0)
    {
        @Model.dataStructure.Name
    }
    else
    {
        if (Model.structured)
        { 
            <font>New structured Data Structure</font>
        }
        else
        {
           <font>New unstructured Data Structure</font> 
        }
    }
}

@if (Model.inUse)
{
    <span class="bx bx-lock"></span>
}
</h3>

<div class="errorMsg">
    
</div>

<span class="planingPartialDiv">   
 @using (Html.BeginForm("saveDataStructure", "Home", new { area = "RPM" }))
 {    
    <table class="bx-rpm-info">
        <tr>
            <td>Name <span class="bx bx-required" title="Required"></span></td>
            <td>@(Html.TextBoxFor(m => Model.dataStructure.Name, new { @class = "bx-input", @style = "width:180px", @autofocus = "autofocus", @tabindex = "1", @title = "The name will be used for a new Data Structure" }))</td>
            <td rowspan="3" style="width:100px; vertical-align:top;">Description</td>
            <td rowspan="3" style="text-align:left; vertical-align:top;">@(Html.TextAreaFor(m => Model.dataStructure.Description, new { @class = "datastrDes bx-textarea", @Value = Model.dataStructure.Description, @tabindex = "3", @title = "Description" }))</td>
            <td rowspan="3" style="text-align:left; vertical-align:top;" class="bx-errorMsg">
                <ul style="list-style:none;">
                    @foreach (string s in errorMsg)
                    {
                        <li class="errorMsg">@s</li>
                    }
                </ul>       
            </td>
        </tr>
        <tr class ="hidden">
            <td style="width:180px"></td>
            <td style="width:180px">
                @(Html.Telerik().DropDownList()
                    .Name("category")
                    //.HtmlAttributes(new { @tabindex = 2 })
                    .DropDownHtmlAttributes(new { style = "height: 200px" })
                    .BindTo(new SelectList(CategoryList))
                    .SelectedIndex(categoryIndex)
                )
            </td>
        </tr>
        <tr>
            <td style="width:180px">
                @if (Model.structured == true)
                {
                    <span>Number of Variables</span>
                }
                else
                {
                    <span></span> 
                }
            </td>
            <td style="width:180px">
                @if (Model.variableStructs != null && Model.structured == true)
                {
                    if (Model.variableStructs.Count() > 0)
                    {
                        @(Html.TextBox("NumberOfVariables", Model.variableStructs.Count(), new { @class = "bx-input bx-disabled", @style = "width:180px", @autofocus = "autofocus", @tabindex = "1", @disabled="disabled" }))
                    }
                    else
                    {
                        @(Html.TextBox("NumberOfVariables", "No Variables", new { @class = "bx-input bx-disabled bx-errorMsg", @style = "width:180px", @autofocus = "autofocus", @tabindex = "1", @disabled = "disabled" }))
                    }
                }
            </td>
        </tr>
        <tr>
            <td style="width:180px">Data Structure Id</td>
            <td style="width:180px">
                @(Html.TextBox("DataStructureId", Model.dataStructure.Id, new { @class = "bx-input bx-disabled", @style = "width:180px", @autofocus = "autofocus", @tabindex = "1", @disabled = "disabled" }))
            </td>
        </tr>
    </table>

    @(Html.TextBoxFor(m => Model.dataStructure.Id, new { @class = "hidden", @Value = Model.dataStructure.Id }))
    @(Html.TextBoxFor(m => Model.structured, new { @class = "hidden", @Value = Model.structured }))

   
     
                if (Model.structured == true && Model.variableStructs.Count > 0)
                {
        <div>@Html.Partial("_showDataStructure", Model)</div>
                } 
     
    <div class="bx-rpm-functions bx-rpm-buttons">

        @if (Model.dataStructure.Id != null && Model.dataStructure.Id != 0)
        {
            if (!(Model.inUse))
            {
                <button title="show Datasets using this Data Structure" name="Datasets" class="bx-button bx-disabled" disabled="disabled" >Datasets</button>
            }
            else
            {
                @Html.ActionLink("Datasets", "showDatasets", "Home", new { id = Model.dataStructure.Id, structured = Model.structured }, new { area = "RPM", @class = "bx-button function", @title = "show Datasets using this Data Structure", @tabindex = "5" })
            }

            if (Model.variableStructs != null || Model.structured == true)
            {
                if (Model.variableStructs.Count() > 0)
                {
                    //<div title="Download">
                    @Html.ActionLink("Download", "downloadTemplate", "Home", new { id = Model.dataStructure.Id }, new { area = "RPM", @class = "bx-button function", @title = "Download Data Structure Template", @tabindex = "6" })
                    //</div>
                }
                else
                {
                    <button title="Download Data Structure Template" name="Download" class="bx-button bx-disabled" disabled="disabled">Download</button>
                }
            }
            else
            {
                    <button title="Download Data Structure Template" name="Download" class="bx-button bx-disabled" disabled="disabled">Download</button>
            }
            if (!(Model.inUse))
            {
                if (Model.structured == true)
                {
                    @Html.ActionLink("Add Variables", "showVariables", "Home", new { id = Model.dataStructure.Id }, new { area = "RPM", @class = "bx-button function", @title = "Add Variable to Data Structure", @tabindex = "7" })
                }
                else
                {
                    <button title="Add Varriables" name="Add Variables" class="bx-button bx-disabled" disabled="disabled">Add Variable</button>
                }
                @Html.ActionLink("Delete", "deleteDataStructure", "Home", new { id = Model.dataStructure.Id }, new { area = "RPM", @class = "bx-button function", @title = "Delete Data Structure", onclick = "return confirm('Are you sure you want to delete the Data Structure " + Model.dataStructure.Name + "?')", @tabindex = "8" })

            }
            else
            {
                <button title="Add Varriables" name="Add Variables" class="bx-button bx-disabled" disabled="disabled">Add Variable</button>    
                <button title="Delete Data Structure" name="Download" class="bx-button bx-disabled" disabled="disabled" >Delete</button>
            }
        }        
    </div>
    <div class="bx-rpm-submit bx-rpm-buttons">
        <button name="create" value="save" type="submit" class="bx-button action" title="Save Data Structure" tabindex = "9">Save</button>

        @if (Model.dataStructure.Id != null && Model.dataStructure.Id != 0)
        {
            <button name="create" value="saveAs" type="submit" class="bx-button action" title="Save Data Structure as" tabindex = "10">Save As</button>
            @Html.ActionLink("Cancel", "showDataStructure", "Home", new { SelectedItem = Model.dataStructure.Id + "," + Model.structured }, new { area = "RPM", @class = "bx-button action", @title = "Cancel", @tabindex = "11" })
        }
        else
        {
            if (Model.structured)
            {
                @Html.ActionLink("Cancel", "createStructuredDataStructure", "Home", new { area = "RPM", @class = "bx-button action", @title = "Cancel", @tabindex = "11" })
            }
            else
            {
                @Html.ActionLink("Cancel", "createUnStructuredDataStructure", "Home", new { area = "RPM", @class = "bx-button action", @title = "Cancel", @tabindex = "11" })
            }
        }
    </div>
 }
</span>
<div style="position:absolute; left:calc(50% - 508px); top:15%;">
@if (Session["Window"] == null)
{
    Session["Window"] = false;
}
@{ Html.Telerik().Window()
        .Name("Add_Variable")
        .Title("Add Variable")
        .Draggable(true)
        .Visible((bool)Session["Window"])
        .Modal(true)
        .ClientEvents((events => events.OnClose("close")))
        .Content(@<text>
                    @Html.Partial("_addVariable", Model)
                    </text>)
        .Width(1000)
        .Render()
        ;
        
}
</div>
@{Session["Window"] = false;}

@if (Session["variableId"] != null && Convert.ToUInt64(Session["variableId"]) != 0 && Model.variableStructs.Where(v => v.variable.Id.Equals((long)Session["variableId"])).Count() > 0)
{
    <div style="position:fixed; left:20%; top:15%;">
        @{ Html.Telerik().Window()
            .Name("Edit_Variable")
            .Title("Edit Variable: " + Model.variableStructs.Where(v => v.variable.Id.Equals((long)Session["variableId"])).FirstOrDefault().variable.Label + " (Id: " + Model.variableStructs.Where(v => v.variable.Id.Equals((long)Session["variableId"])).FirstOrDefault().variable.Id + ")")
            .Draggable(true)
            .Modal(true)
            .Visible((bool)Session["VariableWindow"])
            .ClientEvents((events => events.OnClose("close")))
            .Content(@<text>
                @Html.Partial("_editVariable", Model)
                </text>)
            .Width(300)
            .Render()
            ;

        }
    </div>
}
@{Session["VariableWindow"] = false;}

<div style="position:absolute; left:calc(50% - 508px); top:15%;">
@if (Session["DatasetWindow"] == null)
{
    Session["DatasetWindow"] = false;
}
@{ Html.Telerik().Window()
        .Name("showDatasets")
        .Title("Datasets")
        .Draggable(true)
        .Visible((bool)Session["DatasetWindow"])
        .Modal(true)
        //.ClientEvents((events => events.OnClose("close")))
        .Content(@<text>
                    @Html.Partial("_showDatasets", Model)
                    </text>)
        .Width(500)
        .Render()
        ;        
}
</div>
@{Session["DatasetWindow"] = false;}

<div style="position:absolute; left:calc(50% - 378px); top:15%;">
@if (Session["saveAsWindow"] == null)
{
    Session["saveAsWindow"] = false;
}
@{ Html.Telerik().Window()
        .Name("saveAs")
        .Title(Model.dataStructure.Name + " Save As")
        .Draggable(true)
        .Visible((bool)Session["saveAsWindow"])
        .Modal(true)
        .ClientEvents((events => events.OnClose("close")))
        .Content(@<text>
                    @Html.Partial("_dataStructureSaveAs", Model)
                   </text>)
        .Width(500)
        .Render()
        ;        
}
</div>

@{Session["saveAsWindow"] = false;}

<script type="text/javascript">
    function close(e)
    {        
        var data = { selected: null };
        $.ajax({
            url: '/RPM/Home/setSelected',
            type: 'POST',
            data: JSON.stringify(data),
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            error: function (xhr) {
                //alert('Error: ' + xhr.statusText);
            },
            success: function (result) {
                //alert("success");
            },
            async: true,
            processData: false
        });
        
        var params = "@Model.dataStructure.Id,@Model.structured";
        window.location.href = '/RPM/Home/showDataStructure?SelectedItem='+params;
    }
</script>
