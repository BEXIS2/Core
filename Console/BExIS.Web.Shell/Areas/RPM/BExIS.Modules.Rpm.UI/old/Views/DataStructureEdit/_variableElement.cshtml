@using BExIS.Modules.Rpm.UI.Models
@using System
@model BExIS.Modules.Rpm.UI.Models.VariablePreviewStruct

@{
    Random random = new Random(Convert.ToInt32(Model.Id));
    int rand = random.Next(0, 32000);
    long id = Convert.ToInt64(DateTime.Now.Ticks) + rand;
 }

<div class="bx-rpm-variable-item" id="@Model.Id">
    <table>
        <tr>
            <td class="column">
                <div class="bx-rpm-label">Column index</div>
                <div class="bx-rpm-text">@Model.Id</div>
                <div class="hidden" id="varid">@Model.Id</div>
                <div class="hidden" id="attrid">@Model.Attribute.Id</div>
            </td>
            <td class="name">
                <div class="bx-rpm-label">Name</div>
                <div class="bx-rpm-text">@Html.TextBox("Label", Model.Name, new { @id = "varlabel" })</div>
            </td>
            <td class="unit">
                <div class="bx-rpm-label">Unit</div>
                <div class="bx-rpm-text">
                    @if (Model.convertibleUnits.Count > 1)
                    {
                        <div class="bx-rpm-unit-select" id="@id">
                            @Html.TextBox("Unit", Model.Unit.Id, new { @id = "varunit", @class = "hidden bx-rpm-value" })
                            <div class="bx-rpm-option" onclick="javascript:openDropdown(this)">@Model.Unit.Description</div>
                            <div class="bx bx-rpm-option-arrow t-arrow-down" onclick="javascript: $(this).parent().find('.bx-rpm-option').trigger('click')" />
                            <div class="bx-rpm-options" style="display:none">
                                @foreach (ItemStruct item in Model.convertibleUnits)
                                {
                                    <div value="@item.Id" onclick="javascript:closeDropdown(this)">@item.Description (@item.Name) </div>
                                }
                            </div>
                        </div>
                    }
                    else
                    {
                        @Model.Unit.Name
                        @Html.TextBox("Unit", Model.Unit.Id, new { @id = "varunit", @class = "hidden" })
                    }
                </div>
            </td>
            <td class="datatype">
                <div class="bx-rpm-label">Data Type</div>
                <div class="bx-rpm-text" id="vardatatype">@Model.DataType</div>
            </td>
            <td class="isoptional">
                <div class="bx-rpm-label">Optional</div>
                <div class="bx-rpm-text">@Html.CheckBox("varisotional", @Model.isOptional)</div>
            </td>
            <td class="bx-rpm-delete" title="Delete Variable"><span id="deletevariable" class="bx fa-trash-o"></span></td>
            <td class="bx-rpm-expand" title="Show Details"><span id="variablecollapse" class="bx bx-angle-double-down"></span></td>
        </tr>
        <tr class="bx-rpm-error hidden">
            <td></td>
            <td class="bx-rpm-message" colspan="6"></td>
        </tr>
        <tr class="">
            <td class="id"></td>
            <td class="name">
                <div class="bx-rpm-label hiddenelements" title="@Model.Description">@Model.Description</div>
            </td>
            <td class="unit">
                <div class="bx-rpm-label" title="@Model.Unit.Name">@Model.Unit.Name</div>
            </td>
            <td class="datatype">
                @if (!String.IsNullOrEmpty(Model.DisplayPattern))
                {
                    <div class="bx-rpm-label" title="@Model.DisplayPattern">@Model.DisplayPattern</div>
                }
            </td>
        </tr>
        <tr class="hidden hiddenelements">
            <td colspan="7" class="description">
                <div class="bx-rpm-label">Description</div>
                <div class="bx-rpm-text">@Html.TextArea("Description", @Model.Description, new { @class = "bx-rpm-textarea description", @id = "vardescription" })</div>
            </td>
        </tr>

        @if (Model.MissingValues != null)
        {
        <tr class="hidden hiddenelements bx-rpm-missing-value">
            <td colspan="5">
                <div class="bx-rpm-label">Missing Values</div>
            </td>
            <td class="bx-rpm-add" title="Add Missing Value"><span id="addmissingvalue" class="bx fa-plus"></span></td>
        </tr>
        <tr class="hidden hiddenelements">
            <td colspan="6" class="missingvalues">
                <table class="bx-rpm-missing-value-container">
                    @if (Model.MissingValues.Count > 0)
                    {
                        foreach (MissingValueStruct mvs in Model.MissingValues)
                        {
                            @Html.Partial("_missingValueElement", mvs)
                        }
                    }
                </table>
            </td>
        </tr>
        }

        @if (Model.Constraints.Count > 0)
        {
            <tr class="hidden hiddenelements">
                <td colspan="7" class="constraints">
                    <div class="bx-rpm-label">Constraints</div>
                    <div class="bx-rpm-text">
                        <ul>
                            @foreach (KeyValuePair<long, string> c in Model.Constraints)
                            {
                                <li>@c.Value</li>
                            }
                        </ul>
                    </div>
                </td>
            </tr>
        }
        <tr class="hidden hiddenelements">
            <td class="attrribute" colspan="7">
                <div class="bx-rpm-label">Variable Template</div>
                <div class="bx-rpm-attribute-item">
                    <table>
                        <tr>
                            <td class="id">
                                <div class="bx-rpm-label">Id</div>
                                <div class="bx-rpm-text" title="@Model.Attribute.Id">@Model.Attribute.Id</div>
                            </td>
                            <td class="name">
                                <div class="bx-rpm-label">Name</div>
                                <div class="bx-rpm-text" title="@Model.Attribute.Name">@Model.Attribute.Name</div>
                            </td>
                            <td class="unit">
                                <div class="bx-rpm-label">Unit</div>
                                <div class="bx-rpm-text" title="@Model.Attribute.Unit.Name">@Model.Attribute.Unit.Name</div>
                            </td>
                            <td class="datatype">
                                <div class="bx-rpm-label">Data Type</div>
                                <div class="bx-rpm-text" title="@Model.Attribute.DataType">@Model.Attribute.DataType</div>
                            </td>
                        </tr>
                        <tr>
                            <td class="id"></td>
                            <td class="name">
                                <div class="bx-rpm-label" title="@Model.Attribute.Description">@Model.Attribute.Description</div>
                            </td>
                            <td class="unit">
                                <div class="bx-rpm-label" title="@Model.Attribute.Unit.Name">@Model.Attribute.Unit.Name</div>
                            </td>
                            <td class="datatype">
                                @if (!String.IsNullOrEmpty(Model.DisplayPattern))
                                {
                                    <div class="bx-rpm-label" title="@Model.Attribute.DisplayPattern">@Model.Attribute.DisplayPattern</div>
                                }
                            </td>
                        </tr>

                    </table>
                </div>
            </td>
        </tr>
    </table>
</div>



