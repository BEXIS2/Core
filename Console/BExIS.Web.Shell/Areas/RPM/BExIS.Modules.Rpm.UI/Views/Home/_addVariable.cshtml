@using System.Data
@using Telerik.Web.Mvc.UI
@using BExIS.Dlm.Entities.DataStructure
@model BExIS.Modules.Rpm.UI.Models.DataStructureDesignerModel

@{
    ViewBag.Title = "Planning";

    long[][] selected = new long[][] { };
    
    if (Session["selected"] != null)
    {
        selected = (long[][])Session["selected"];
    }

    int value = 0;

    Session["dataStructureId"] = Model.dataStructure.Id;
}

@if (Model.inUse == true)
{ 
    <p>Can't add variable Data Strucure in use</p>
}
else
{
    <div class="planingPartialDiv" id="createVariable">
        @using (Html.BeginForm("AddVariables", "Home", new { area = "RPM" }))
        {
            @(Html.Telerik().Grid(Model.dataAttributeList)
            .Name("bx-rpm-dataAttributeGrid")
            .Sortable()
            .Filterable()
            .Scrollable(t => t.Height(450))
            .Columns(columns =>
            {
                columns.Template(
                    @<text>
                            @{
                                value = 0;
                                for(int i = 0; i < selected.Length; i++)
                                {
                                    if(selected[i][0] == item.Id)
                                    {
                                        value = Convert.ToInt32(selected[i][1]);
                                    }
                                }
                            }
                            @(Html.Telerik().IntegerTextBox()
                                .Name(item.Id.ToString())
                                .HtmlAttributes(new { @tabindex = "3" })
                                .Value(value)
                                .MinValue(0)
                                .ClientEvents(events =>
                                {
                                    events.OnChange("change");
                                }))
                        </text>)
                    .Title("")
                    .Width(50)
                    .HtmlAttributes(new { style = "text-align:center; padding:0px;" });


                //columns.Command(commands => commands.Select()).Title("Select");
                columns.Bound(c => c.Id)
                    .Width(100);
                columns.Bound(c => c.Name);
                columns.Bound(c => c.ShortName);
                columns.Bound(c => c.Description);
                //columns.Bound(c => c.Classification.Name)
                //    .Title("Classification");
                //columns.Bound(c => c.Unit.Name)
                //    .Title("Unit");
                ////columns.Bound(c => c.DataType.Name)
                ////    .Title("Data Type");

            })
            .ClientEvents(events=>events.OnDataBound("onDataBound"))
            )
            <div class="bx-rpm-submit bx-rpm-buttons">
            <button name="addVariables" value="add" type="submit" class="bx-button action"  id="saveButton" title="Save The Unit" tabindex = "1">Save</button>
            @Html.ActionLink("Cancel", "showDataStructure", "Home", new { SelectedItem = Model.dataStructure.Id + "," + Model.structured }, new { area = "RPM", @class = "bx-button action", @title = "Cancel", @tabindex = "2", @autofocus = "autofocus" })
        </div>
        }
    </div>
    
    <script type="text/jscript">
   
    function change(e) {
        var selected = new Array();
        var count = 0;

        $('.t-numerictextbox .t-input').each(function () {
            var id = $(this).attr('id');
            if ($('#' + id).data('tTextBox').value() > 0) {
                selected[count] = new Array();
                selected[count][0] = $('#' + id).attr('id');
                selected[count][1] =$('#' + id).data('tTextBox').value();
                count ++;
            }
        });

        var data = { selected: selected };

        $.ajax({
            url: '/RPM/Home/setSelected',
            type: 'POST',
            data: JSON.stringify(data),
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            error: function (xhr) {
                //alert('Error: ' + xhr.statusText);
            },
            success: function (result) {
                //alert("success");
            },
            async: true,
            processData: false
        });
    }
    
    function onDataBound()
    {
        addTooltips();
    }

</script>
}