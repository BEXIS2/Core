@{
    ViewBag.Title = "_txtFormularView";
}
@model BExIS.Modules.Dcm.UI.Models.FileInfoModel

@using Telerik.Web.Mvc.UI;
@using BExIS.IO;
@using BExIS.IO.Transform.Input;
@{
    
    List<string> TextSeperatorList = new List<string>();
    foreach (TextSeperator ms in Enum.GetValues(typeof(TextSeperator)))
    {
        TextSeperatorList.Add(ms.ToString());
    }


    List<string> DecimalCharacterList = new List<string>();
    foreach (DecimalCharacter ms in Enum.GetValues(typeof(DecimalCharacter)))
    {
        DecimalCharacterList.Add(ms.ToString());
    }

    List<string> OrientationList = new List<string>();
    foreach (Orientation ms in Enum.GetValues(typeof(Orientation)))
    {
        OrientationList.Add(ms.ToString());
    }

    List<string> TextMarkerList = new List<string>();
    foreach (TextMarker ms in Enum.GetValues(typeof(TextMarker)))
    {
        TextMarkerList.Add(ms.ToString());
    }

      
}

<div id="asciiFormularDiv">
<table>
    <tr>
        <td>
           @(Html.LabelFor(m => m.Separator))
        </td>
        <td>
            @Html.DropDownListFor(m => m.Separator, new SelectList(TextSeperatorList, Model.Separator), new { @class="asciiFormularField"})
        </td>
    </tr>
    <tr>
        <td>
             @(Html.LabelFor(m => m.Decimal))
        </td>
        <td>
             @Html.DropDownListFor(m => m.Decimal, new SelectList(DecimalCharacterList ,Model.Decimal), new { @class="asciiFormularField"})

        </td>
    </tr>
    <tr>
        <td>
             @(Html.LabelFor(m => m.TextMarker))
        </td>
        <td>
             @Html.DropDownListFor(m => m.TextMarker, new SelectList(TextMarkerList ,Model.TextMarker), new { @class="asciiFormularField"})

    </tr>
    <tr>
        <td>
             @(Html.LabelFor(m => m.Orientation))
        </td>
        <td>
             @Html.DropDownListFor(m => m.Orientation, new SelectList(OrientationList ,Model.Orientation), new { @class="asciiFormularField"})

    </tr>
    <tr>
        <td>
           @(Html.LabelFor(m => m.Offset))
        </td>
        <td>
           @(Html.TextBoxFor(m => m.Offset , new {@class = "t-input asciiFormularField" }))
                      
        </td>
        <td>
            Number of empty columns (columnwise) or rows (rowwise) before the variables are specified.
        </td>
    </tr>
    <tr>
        <td>
           @(Html.LabelFor(m => m.Variables))
        </td>
        <td>
           @(Html.TextBoxFor(m => m.Variables , new {@class = "t-input asciiFormularField" }))
                      
        </td>
        <td>
             Row (columnwise) or column (rowwise) in which the variables are.
        </td>
    </tr>
     <tr>
        <td>
           @(Html.LabelFor(m => m.Data))
        </td>
        <td>
           @(Html.TextBoxFor(m => m.Data , new {@class = "t-input asciiFormularField"}))
                      
        </td>
        <td>
            Row (columnwise) or column (rowwise) in which the data starts.
        </td>
    </tr>

</table>
</div>

<script type="text/javascript">
    
    $('.asciiFormularField').change(function()
    {
        $.post('@Url.Action("ChangeAsciiFileInfo", "SubmitGetFileInformation", new RouteValueDictionary { { "area", "DCM" } })', {name : this.id , value : $(this).val()}, function (response) {


        })

    })

</script>