@model BExIS.Modules.Dcm.UI.Models.SelectFileViewModel
@using Telerik.Web.Mvc.UI;
@using System;
@using System.Web.Configuration;
@using BExIS.Modules.Dcm.UI.Models;

@{

    HttpRuntimeSection section = System.Configuration.ConfigurationManager.GetSection("system.web/httpRuntime") as HttpRuntimeSection;
    int int_MaxRequestLength = section.MaxRequestLength;
    int mbMax = int_MaxRequestLength / 1024;

    string fileExtListAsString = "";

    foreach (string s in Model.SupportedFileExtentions)
    {
        if (fileExtListAsString != "")
        {
            fileExtListAsString += "," + s;
        }
        else
        {
            fileExtListAsString = s;
        }
    }
}

<div class="wizardStep">

    <div class="wizardStep_Main">
        <div class="wizardStep_Header stepper">

            <h3>@Model.StepInfo.title</h3>
        </div>

        <div class="wizardStep_Description stepper">
            <p>To import a new metadata structure into the system, please select an XSD schema either from your local computer or from the previously uploaded files.</p>
            <p>If an XSD stands in dependence on other XSD files, the required XSD files must be uploaded to the server.</p>
        </div>

        <div class="wizardStep_Content stepper">

            <table>
                <tr>

                    <td>
                        @(Html.Telerik().Upload()
                                .Name("SelectFileUploader")
                                .Multiple(false)
                                .ShowFileList(false)
                                .HtmlAttributes(new {title="Browse"})
                                .ClientEvents(events =>
                                    events.OnSelect("SelectFileProcess_OnSelect")
                                            .OnRemove("SelectFileProcess_OnRemove")
                                            .OnSuccess("SelectFileProcess_OnSuccess")

                                )
                                .Async(async => async
                                    .Save("SelectFileProcess", @Model.StepInfo.PostActionInfo.ControllerName, new { area = "Dcm" })
                                    .AutoUpload(true))

                                )
                    </td>
                    <td>
                        Select an XSD file from your local computer.
                    </td>
                </tr>
                <tr>

                    <td>
                        @Html.DropDownListFor(m => m.SelectedServerFileName, new SelectList(Model.serverFileList), "Select")@*, new { disabled = "disabled" })*@
                    </td>
                    <td>
                        Select an XSD file previously uploaded to the server.
                    </td>
                </tr>
            </table>
        </div>
    </div>

    <div class="wizardStep_Success stepper">
        <div id="fileNameDiv">@if(Model.SelectedFileName!=""){@Model.SelectedFileName}</div>
    </div>

    <div class="wizardStep_Error stepper">

        @Html.ValidationSummary(true)

        @if (Model != null)
        {
            if (Model.ErrorList != null)
            {
                if (Model.ErrorList.Count == 0)
                {

                }
                else
                {
        <ul>
            @foreach (BExIS.IO.Transform.Validation.Exceptions.Error s in @Model.ErrorList)
                        {
            <li>@s.ToString()</li>
                        }
        </ul>

                }
            }

        }
    </div>
</div>

<script type="text/javascript">

    function SelectFileProcess_OnSelect(e) {
        var file = e.files[0];
        var maxsize = '@int_MaxRequestLength';
        //if (file.extension != ".xlsm" && file.extension != ".csv" && file.extension != ".txt") {

          if (!IsExtentionValid(file.extension)) {
              alert("Only .xsd files can be uploaded");
            e.preventDefault();
            return false;
        }
        else {

            if (file.size > (maxsize * 1024)) {

                alert("Max file : " + maxsize / 1024 + " MB is supported. Please contact your administrator to upload bigger files.");
                e.preventDefault();
                return false;
            }

            Parameters.push("Extention:" + file.extension);
        }
    }

    /*
    Is Extention from selected file
    in list of supported files
    */
    function IsExtentionValid(fileExtention) {
        var extListAsString = ".xsd";
        var extList = extListAsString.split(',');

        for (var i = 0; i < extList.length; i++) {
            if (fileExtention.toLowerCase() == extList[i]) {
                return true;
            }
        }

        return false;
    }

    function SelectFileProcess_OnRemove(e) {
        //$('#fileNameDiv').text("");
    }

    function SelectFileProcess_OnSuccess(e) {

        $('.wizardStep_Error').empty();
        $('#fileNameDiv').text(e.files[0].name);
    }

    $('#SelectedServerFileName').change(function () {

        var value = $(this).val();

        $.post('@Url.Action("SelectFileFromServerProcess", @Model.StepInfo.PostActionInfo.ControllerName , new RouteValueDictionary { { "area", "DCM" } })', { fileName: value }, function (response) {

            $('.wizardStep_Error').empty();
            $('#fileNameDiv').text(value);
        })
    })
</script>