 @{
    ViewBag.Title = "UploadWizardNav";
}

@model BExIS.Dcm.UploadWizard.EasyUploadTaskManager
@using BExIS.Modules.Dcm.UI.Models;

@{

    int currentPage = @Model.GetCurrentStepInfoIndex() + 1;
    
}
<div id="NavDiv">

    @if (!(Model.Current() == null))
    { 
    <table id="NavigationTable">
        <tr>
            <td id="Nav_Left">
                @if (!Model.Prev().IsEmpty())
                {   
                    <button id="prevBt" onclick"PrevButton_OnClick()"  class="t-button action" title="@Model.Prev().title" >Prev</button>
               }
            </td>
            <td id="Nav_Pages">
                 ( @currentPage  of   @Model.StepInfos.Count )
            </td>
            <td id="Nav_Options">
               @Html.ActionLink("Cancel", "CancelUpload", "EasyUpload", new RouteValueDictionary { { "area", Model.Current().GetActionInfo.AreaName.ToString() } }, new { @class = "t-button action",  @style="float:right" })
            </td>
            <td id="Nav_Right">
                 @if (!Model.Next().IsEmpty())
                 { 
                    <button id="nextBt" onclick"NextButton_OnClick()" class="t-button action" style="float:right" title="@Model.Next().title">Next</button>
                 }

                @if (Model.Current().Equals(Model.Finish()))
                { 
                    <button id="finishBt" onclick"NextButton_OnClick()" class="t-button action" style="float:right" title="Finish">Finish</button>
                }

            </td>
        </tr>
    </table>
    }
</div>
<script type="text/javascript">
      
    $("#prevBt").click(function () {
        //Show a spinner and disable the button - making sure the button is not resized by setting min-width and -height
        var oldHtml = $(this).html();
        var curWidth = $(this).outerWidth();
        var curHeight = $(this).outerHeight();
        $(this).css({
            "min-width": curWidth.toString() + "px",
            "min-height": curHeight.toString() + "px"
        });
        $(this).prop('disabled', true);
        $(this).html('<i class="fa fa-spinner fa-spin fa-fw"></i><span class="sr-only">Loading...</span>');
        
        $('.uploadWizardStep').preloader(16, "Previous step is loading.");
        var index = '@Model.StepInfos.IndexOf(@Model.Prev())';
  

        if (index < 0) index = 0;

        $.get('@Url.Action(@Model.Prev().GetActionInfo.ActionName, @Model.Prev().GetActionInfo.ControllerName, new RouteValueDictionary { { "area", @Model.Prev().GetActionInfo.AreaName } })', { index: index }, function (response) {
            //Restore old button content
            $(this).prop('disabled', false);
            $(this).html(oldHtml);

            $("#StepView").html(response);
            NavigationRefresh();
            TaskListRefresh();
            //$('#StepView').removePreloader();

        })

       
    })

    $("#nextBt").click(function () {
        //Show a spinner and disable the button - making sure the button is not resized by setting min-width and -height
        var oldHtml = $(this).html();
        var curWidth = $(this).outerWidth();
        var curHeight = $(this).outerHeight();
        $(this).css({
            "min-width": curWidth.toString() + "px",
            "min-height": curHeight.toString() + "px"
        });
        $(this).prop('disabled', true);
        $(this).html('<i class="fa fa-spinner fa-spin fa-fw"></i><span class="sr-only">Loading...</span>');

        $('.uploadWizardStep').preloader(16, "Next step is loading.");

        $.ajax({ 
            type: 'POST', 
            contentType: 'application/json; charset=utf-8', 
            data: JSON.stringify(Parameters),
            dataType: 'html', 
            url: '@Url.Action(@Model.Current().PostActionInfo.ActionName, @Model.Current().PostActionInfo.ControllerName, new RouteValueDictionary { { "area", @Model.Current().PostActionInfo.AreaName } })',
            success: function (result) { 
                //Restore old button content
                $(this).prop('disabled', false);
                $(this).html(oldHtml);

                $('#StepView').html(result);
                NavigationRefresh();
                TaskListRefresh();

            }
        });
    })
    

    $("#finishBt").click(function () {

        //StartProgress();
        StartUpload(this);
        
    })

    function StartUpload(button)
    {
        //Show a spinner and disable the button - making sure the button is not resized by setting min-width and -height
        var oldHtml = $(button).html();
        var curWidth = $(button).outerWidth();
        var curHeight = $(button).outerHeight();
        $(button).css({
            "min-width": curWidth.toString() + "px",
            "min-height": curHeight.toString() + "px"
        });
        $(button).prop('disabled', true);
        $(button).html('<i class="fa fa-spinner fa-spin fa-fw"></i><span class="sr-only">Loading...</span>');
        
        $.ajax({
            type: 'POST',
            contentType: 'application/json; charset=utf-8',
            data: JSON.stringify(Parameters),
            dataType: 'html',
            url: '@Url.Action(@Model.Current().PostActionInfo.ActionName, @Model.Current().PostActionInfo.ControllerName, new RouteValueDictionary { { "area", @Model.Current().PostActionInfo.AreaName } })',
            success: function (result)
            {
                //Restore old button content
                $(this).prop('disabled', false);
                $(this).html(oldHtml);

                if (result == !null || result != "")
                {
                    $('#StepView').html(result);
                    NavigationRefresh();
                    TaskListRefresh();
                }
                else
                {
                    window.location.replace('@Url.Action("FinishUpload", "EasyUpload", new RouteValueDictionary { { "area", "DCM" } })' );
                }
            }
        });
    }
    

    function NavigationRefresh()
    {
        $.post('@Url.Action("RefreshNavigation", "EasyUpload", new RouteValueDictionary { { "area", "DCM" } })', function (response) {
           
            $("#NavDiv").replaceWith(response);
        })
    }
</script>
