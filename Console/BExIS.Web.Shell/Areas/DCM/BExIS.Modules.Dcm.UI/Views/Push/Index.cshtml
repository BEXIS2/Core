@section Information
{
    Each user has a personal folder on the server where files are stored temporary. This wizard will assist you in pushing your files to server. You can also see the uploaded files, delete each file, or use these files later, when you want to upload data to a dataset.
    <p>
        More information
        @Html.ActionLink("here", "Index", "Help", new { id = 0 }, new { @class = "bx-informationLink", title="go to help", target="_blank"})
    </p>
}

@using Telerik.Web.Mvc.UI;
@using System.Web.Configuration;
@model BExIS.Modules.Dcm.UI.Models.Push.SendBigFilesToServerModel

@{
    HttpRuntimeSection section = System.Configuration.ConfigurationManager.GetSection("system.web/httpRuntime") as HttpRuntimeSection;
    int int_MaxRequestLength = section.MaxRequestLength;
    int mbMax = int_MaxRequestLength / 1024;

    string fileExtListAsString = "";

    foreach (string s in Model.SupportedFileExtentions)
    {
        if (fileExtListAsString != "")
        {
            fileExtListAsString += "," + s;
        }
        else
        {
            fileExtListAsString = s;
        }
    }

    int maxFileNameLength = (int)(ViewBag.maxFileNameLength);
}

<div id="push">
    <h3></h3>

    <div class="push_Header stepper">

        <h3>Send files to server</h3>
    </div>

    <div class="push_Description stepper">
        <p>Please select one or more data files to be uploaded to the system.</p>
        <p>
            Note:  Large data files may take several minutes or hours to transfer, depending on your network speed.<br />
            The system is freezed until the file has been transfered completely. Please be patient!
        </p>

        <p>
            Supported file formats: @{foreach (string s in @Model.SupportedFileExtentions)
                                 {<b>(*@s) </b>} }
        </p>

        <p>Maximum file size: @mbMax MB</p>
    </div>

    @using (Html.BeginForm("ProcessSubmit", "Push", new { area = "Dcm" },
                         FormMethod.Post, new { id = "uploadForm", enctype = "multipart/form-data" }))
{

    @(Html.Telerik().Upload()
            .Name("attachments")
            .Multiple(true)
            .ShowFileList(true)
            .ClientEvents(events => events
                    .OnSelect("Push_OnSelect")
                    .OnComplete("OnComplete")
                    .OnRemove("Push_OnRemove")
                ))

    <br />

    <button id="push_submitBt" type="submit" value="Push" class="bx-button function bx-disabled" disabled="disabled">Push</button>
}

    @section LeftPane
{
        @Html.Partial("_fileListView", Model.ServerFileList)
    }
</div>
<script type="text/javascript">

    function Push_OnSelect(e) {

        var maxsize = '@mbMax';

        for (var i = 0; i < e.files.length; i = i + 1) {

            var file = e.files[i];

            // check file name lenght
            var filenamelength = '@maxFileNameLength';

            if (file.name.length >= filenamelength) {

                alert("The filename is too long.\nThe maximum allowed file name length is " + filenamelength + ". The name of your file is currently " + file.name.length +" long.\nPlease change your file name and try it again." )
                e.preventDefault();
                return false;
            }

            //console.log(file.extension);
            if (!IsExtentionValid(file.extension)) {

                alert("File : " + file.name + ";\n" + "Only " + '@fileExtListAsString' + "/n files can be uploaded")
                e.preventDefault();
                return false;
            } else {

                //alert(file.size);
                //alert(maxsize);

                // file.size is in bytes - maxsize need to convert to bytes
                if (file.size > (maxsize*1024*1024)) {

                    alert("Max file : " +
                        maxsize +
                        " MB is supported. Please contact your administrator to upload bigger files.");
                    e.preventDefault();
                    return false;
                }
            }
        }

        if (e.files.length == 0) {
            $('#push_submitBt').addClass("bx-disabled");
            $('#push_submitBt').attr("disabled", "disabled");
        } else {
            $('#push_submitBt').removeClass("bx-disabled");
            $('#push_submitBt').removeAttr("disabled");
        }
    }

    function OnComplete() {
        $.post('@Url.Action("Reload", "Push", new RouteValueDictionary {{"area", "DCM"}})',
            function(response) {

                $('#FileList').replaceWith(response);

                alert("the files start to send to the server. you get a email when its finished.");
            })
    }

    /*
    Is Extention from selected file
    in list of supported files
    */
    function IsExtentionValid(fileExtention) {
        var extListAsString = '@fileExtListAsString';
        var extList = extListAsString.split(',');

        for (var i = 0; i < extList.length; i++) {
            if (fileExtention.toLowerCase() == extList[i]) {
                return true;
            }
        }

        return false;
    }

    function Push_OnRemove(e) {

        var tmp = $(".t-upload .t-file");
        if (tmp.length <= 1) {
            $('#push_submitBt').addClass("bx-disabled");
            $('#push_submitBt').attr("disabled", "disabled");

        } else {
            $('#push_submitBt').removeClass("bx-disabled");
            $('#push_submitBt').removeAttr("disabled");
        }
    }
</script>