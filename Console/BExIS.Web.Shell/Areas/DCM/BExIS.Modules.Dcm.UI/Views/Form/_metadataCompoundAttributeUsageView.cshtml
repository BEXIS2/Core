@model BExIS.Modules.Dcm.UI.Models.CreateDataset.StepModelHelper
@using BExIS.Dcm.Wizard;
@using Telerik.Web.Mvc.Extensions

@{
    string stepId = Model.StepId.ToString();
    long parentStepId = Model.Model.StepInfo.Parent.Id;
    string parentTargetId = parentStepId.ToString();

    string parentContentId = Model.Model.StepInfo.Parent.Id + "_Content";
    string id_add = parentStepId + "_" + Model.Number + "_Add";
    string id_choice = stepId + "_Choice";
    string id_choice_container = stepId + "_ChoiceContainer";
    string id_activate = stepId + "_Activate";
    string id_remove = parentStepId + "_" + Model.Number + "_Remove";
    string id_up = parentStepId + "_" + Model.Number + "_Up";
    string id_down = parentStepId + "_" + Model.Number + "_down";
    string id_label_container = parentStepId + "_" + Model.Number + "_LabelContainer";
    string id_button_view = parentStepId + "_" + Model.Number + "_ButtonView";
    string id_container = parentStepId + "_" + Model.Number + "_Container";

    string lockedClass = "";
    bool locked = false;
    bool hideOptional = false;

    string displayName = "";
    displayName = char.ToUpper(Model.DisplayName()[0]) + Model.DisplayName().Substring(1);

    string lvl = Model.Level.ToString();
    if (Model.Level >= 9)
    {
        lvl = "9";
    }

    string styleClass = "Metadata-Level-" + lvl;
    string headerClass = "Metadata-Level-Header-" + lvl;

    if (ViewData.Keys.Contains("Locked"))
    {
        locked = (bool)ViewData["Locked"];
        lockedClass = "bx-disabled";
    }

    if (ViewData.Keys.Contains("HideOptional"))
    {
        hideOptional = (bool)ViewData["HideOptional"];
    }


    //update ViewData XPath
    if (ViewData["Xpath"] != null)
    {
        ViewData["Xpath"] = Model.XPath;
    }
    else
    {
        ViewData.Add("Xpath", Model.XPath);
    }

}

<div id="@stepId" name="@Model.UsageName" number="@Model.Number" class="metadataCompountAttributeUsage @styleClass">
    @if (@Model != null && !(hideOptional && Model.IsEmpty() && locked))
    {

        <div class="header @headerClass ">
            <div id="@id_label_container" class="labelContainer" onclick="showHideClick(this)">
                @if (Model.Activated)
                {
                    <span id="@id_button_view" class="bx fa-angle-double-down"></span>
                }

                <b>
                    @displayName

                    @if (Model.Model.MaxCardinality > 1)
                    {
                        <span>( @Model.Number )</span>
                    }
                </b>

                @if (Model.Model.MinCardinality > 0  && !locked)
                {
                    <b title="Required" style="color: red">*</b>
                }
            </div>

            @if (Model.Activated)
            {
            
                if (!Model.Choice)
                {
                    <div id="help_@id_button_view" class="help" style="display: none; margin-right: 200px;">@Html.Raw(Model.Model.Discription)</div>
                    <div class="optionContainer">
                        <table>
                            <tr>
                                @if (Model.Model.MaxCardinality > 1 && !locked)
                                {
                                    <td>
                                        @if (Model.Model.MaxCardinality > 1
                                             && Model.Model.StepInfo.Parent.Children.Count < Model.Model.MaxCardinality
                                             && Model.Model.Number == Model.Model.StepInfo.Parent.Children.Count)
                                        {
                                            <button id="@id_add" onclick="Add(this)" class="bx-function bx-add" />
                                        }
                                        else
                                        {
                                            <button id="@id_add" onclick="Add(this)" disabled="disabled" class="bx-function bx-add bx-disabled" />
                                        }
                                    </td>
                                    <td>
                                        @if (Model.Model.StepInfo.Parent.Children.Count > 1)
                                        {
                                            <button id="@id_remove" onclick="Remove(this)" class="bx-function bx-delete" />
                                        }
                                        else
                                        {
                                            <button class="bx-function bx-delete bx-disabled" />
                                        }
                                    </td>
                                    <td>
                                        @if (Model.Number < Model.Model.StepInfo.Parent.Children.Count)
                                        {
                                            <button id="@id_down" class="bx-function bx-down" onclick="Down(this)" />
                                        }
                                        else
                                        {
                                            <button class="bx-function bx-down bx-disabled" />
                                        }
                                    </td>
                                    <td>
                                        @if (Model.Number > 1)
                                        {
                                            <button id="@id_up" class="bx-function bx-up" onclick="Up(this)" />
                                        }
                                        else
                                        {
                                            <button class="bx-function bx-up bx-disabled" />

                                        }
                                    </td>

                                }
                                <td>
                                    @if (!string.IsNullOrEmpty(Model.Model.Discription))
                                    {
                                        <button type="button" title="@Model.Model.Discription" class="bx-function bx-disabled bx-info fa fa-info" onclick="showHelp('help_@id_button_view');"></button>
                                    }
                                </td>

                                <td>
                                    @if (Model.Model.MinCardinality == 0 && !locked)
                                    {
                                        <div class="metadata-activate-checkbox">
                                            <span id="@id_activate" onclick="Activate(this)" class="bx bx-check-square-o bx-mouse-pointer" />
                                        </div>
                                    }
                                </td>
                            </tr>
                        </table>
                    </div>
                }

            }
            else
            {
                <div class="optionContainer">
                    @if (Model.Model.MinCardinality == 0 && !locked)
                    {
                        <table>
                            <tr>
                                <td>

                                    <div class="metadata-activate-checkbox">
                                        <span id="@id_activate" onclick="Activate(this)" class="bx bx-square-o bx-mouse-pointer" />
                                    </div>
                                </td>
                            </tr>
                        </table>
                    }
                </div>
            }
        </div>
        if (Model.Activated && Model.Choice)
        {

            if (Model.ChoiceMax <= 1 && !locked)
            {
                <div class="contentContainer">
                    <div class="metadataAttributeContent">
                        <table style="background-color:white;">
                            <tbody>
                                <tr>
                                    <td class="metadataAttributeLabel">

                                        @if (Model.Model.MinCardinality > 0)
                                        {
                                            <b title="Required" style="color: red">*</b>
                                            <b>Please select:</b>
                                        }
                                        else
                                        {
                                            <span>Please select:</span>
                                        }
                                    </td>
                                    <td class="metadataAttributeInput">

                                        @foreach (var element in Model.Childrens)
                                        {
                                            string choiceId = element.StepId + "_choice";

                                            if (element.Activated)
                                            {
                                                <span id="@choiceId" name="@id_choice" class="bx bx-dot-circle-o bx-mouse-pointer"></span>
                                            }
                                            else
                                            {
                                                <span id="@choiceId" name="@id_choice" onclick="ActivateFromChoice(this)" class="bx bx-circle-o bx-mouse-choice bx-mouse-pointer"></span>
                                            }

                                            @element.DisplayName()
                                        }
                                    </td>
                                    <td class="metadataAttributeOption"></td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
            }
        }

        if (Model.Activated)
        {
            <div id="@id_container" class="contentContainer">

                @if (Model.Choice && Model.ChoiceMax <= 1)
                {
                    <div id="choiceContainer" class="complexAttributesContainer">
                        @foreach (var element in Model.Childrens)
                        {
                            if (element.Activated)
                            {
                                @Html.Partial("_metadataCompoundAttributeView", element);
                            }
                        }
                    </div>
                }
                else
                {
                    if (Model.Model.MetadataAttributeModels.Any())
                    {
                        <div class="simpleAttributesContainer">
                            @foreach (var element in Model.Model.MetadataAttributeModels)
                            {
                                @Html.Partial("_metadataAttributeView", element, ViewData);
                            }
                        </div>
                    }

                    <div class="complexAttributesContainer">
                        @foreach (var element in Model.Childrens)
                        {
                            <div style="width: 100%; height: 1px; background-color: white"></div>
                            @Html.Partial("_metadataCompoundAttributeView", element);

                        }
                    </div>
                }
            </div>
        }
    }
</div>
