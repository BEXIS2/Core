@model BExIS.Modules.Dcm.UI.Models.CreateDataset.StepModelHelper
@using BExIS.Dcm.Wizard;
@using Telerik.Web.Mvc.Extensions

@{
    string stepId = Model.StepId.ToString();
    long parentStepId = Model.Model.StepInfo.Parent.Id;
    string parentTargetId = parentStepId.ToString();

    string parentContentId = Model.Model.StepInfo.Parent.Id + "_Content";
    string id_add = parentStepId + "_" + Model.Number + "_Add";
    string id_choice = stepId + "_Choice";
    string id_choice_container = stepId + "_ChoiceContainer";
    string id_activate = stepId + "_Activate";
    string id_remove = parentStepId + "_" + Model.Number + "_Remove";
    string id_up = parentStepId + "_" + Model.Number + "_Up";
    string id_down = parentStepId + "_" + Model.Number + "_down";
    string id_label_container = parentStepId + "_" + Model.Number + "_LabelContainer";
    string id_button_view = parentStepId + "_" + Model.Number + "_ButtonView";
    string id_container = parentStepId + "_" + Model.Number + "_Container";

    string lockedClass = "";
    bool locked = false;
    bool hideOptional = false;


    string lvl = Model.Level.ToString();
    if (Model.Level >= 9)
    {
        lvl = "9";
    }


    string styleClass = "Metadata-Level-" + lvl;
    string headerClass = "Metadata-Level-Header-" + lvl;

    if (ViewData.Keys.Contains("Locked"))
    {
        locked = (bool)ViewData["Locked"];
        lockedClass = "bx-disabled";
    }

    if (ViewData.Keys.Contains("HideOptional"))
    {
        hideOptional = (bool)ViewData["HideOptional"];
    }

}



<div id="@stepId" name="@Model.UsageName" number="@Model.Number" class="metadataCompountAttributeUsage @styleClass">
    @if (@Model != null && !(hideOptional && Model.IsEmpty() && locked))
    {

        <div class="header @headerClass ">
            <div id="@id_label_container" class="labelContainer" onclick="showHideClick(this)">
                <b>
                    @Model.DisplayName()

                    @if (Model.Model.MaxCardinality > 1)
                    {
                        <span>( @Model.Number )</span>
                    }

                </b>

                @if (Model.Model.MinCardinality > 0)
                {
                    <b title="Required" style="color: red">*</b>
                }

                @if (Model.Activated)
                {
                    <span id="@id_button_view" class="bx bx-angle-double-up "></span>
                }
            </div>

            <div class="optionContainer">
                @if (Model.Activated)
                {
                    if (!Model.Choice)
                    {
                        <table>
                            <tr>
                                <td>
                                    @if (!string.IsNullOrEmpty(Model.Model.Discription))
                                    {
                                        <button type="button" title="@Model.Model.Discription" class="bx-function bx-disabled">?</button>
                                    }
                                </td>

                                <td>
                                    @if (Model.Model.MinCardinality == 0 && !locked)
                                    {
                                        <div class="metadata-activate-checkbox">
                                            <span id="@id_activate" class="bx bx-check-square-o bx-mouse-pointer" />
                                        </div>
                                    }
                                </td>
                            </tr>
                        </table>
                    }
                    else
                    {
                        if(Model.ChoiceMax <= 1)
                        { 
                        <div class="metadata-choice-container">
                            @if (!locked)
                            {
                                foreach (var element in Model.Childrens)
                                {
                                    string choiceId = element.StepId + "_choice";

                                    if (element.Activated)
                                    {
                                        <span id="@choiceId" name="@id_choice" class="bx bx-dot-circle-o bx-mouse-pointer"></span>
                                    }
                                    else
                                    {
                                        <span id="@choiceId" name="@id_choice" class="bx bx-circle-o bx-mouse-choice bx-mouse-pointer"></span>
                                    }

                                    @element.DisplayName()
                                }
                            }
                            else
                            {
                                foreach (var element in Model.Childrens)
                                {
                                    if (element.Activated)
                                    {
                                        @element.DisplayName()
                                    }
                                }
                            }
                        </div>
                        }
                    }

                }
                else
                {
                    if (Model.Model.MinCardinality == 0 && !locked)
                    {
                        <table>
                            <tr>
                                <td>

                                    <div class="metadata-activate-checkbox">
                                        <span id="@id_activate" class="bx bx-square-o bx-mouse-pointer" />
                                    </div>
                                </td>
                            </tr>
                        </table>

                    }
                }


            </div>

        </div>
        if (Model.Activated)
        {
            <div id="@id_container" class="contentContainer">

                @if (Model.Choice && Model.ChoiceMax <= 1)
                {
                    <div id="choiceContainer" class="complexAttributesContainer">
                        @foreach (var element in Model.Childrens)
                        {
                            if (element.Activated)
                            {
                                @Html.Partial("_metadataCompoundAttributeViewOffline", element)
                            }
                        }
                    </div>
                }
                else
                {
                    if (Model.Model.MetadataAttributeModels.Any())
                    {
                        <div class="simpleAttributesContainer">
                            @foreach (var element in Model.Model.MetadataAttributeModels)
                            {
                                @Html.Partial("_metadataAttributeViewOffline", element)
                            }
                        </div>
                    }

                    <div class="complexAttributesContainer">
                        @foreach (var element in Model.Childrens)
                        {
                            <div style="width: 100%; height: 1px; background-color: white"></div>
                            @Html.Partial("_metadataCompoundAttributeViewOffline", element)

                        }
                    </div>
                }
            </div>
        }
    }

</div>
