@using BExIS.IO
@using System.Web
@using System
@using System.Globalization
@using IDIV.Modules.Mmm.UI.Models
@using IDIV.Modules.Mmm.UI.Converter
@using BExIS.Utils.Data.Upload
@using Newtonsoft.Json

@model List<FileInformation>

@{
    long id = 0;
    bool edit = false;

    if (ViewData["id"] != null)
    {
        id = Convert.ToInt64(ViewData["id"]);
    }

    if (ViewData["edit"] != null)
    {
        edit = Convert.ToBoolean(ViewData["edit"]);
    }

    string imgList = "";
    double lat = -1;
    double lon = -1;
    DatasetInfo datasetInfo = (DatasetInfo)Session["DatasetInfo"];
}

<link href="@Url.Content("~/Areas/MMM/Stylesheets/MultimediaData.css")" rel="stylesheet" type="text/css" />
<script src="@Url.Content("~/Areas/MMM/Scripts/isotope.pkgd.min.js")"></script>

    <div class="row">
        <div class="col-md-1 col-xs-1">
            @if (edit && id > 0)
            {
                @Html.ActionLink("Upload", "UploadWizard", "Submit", new { area = "DCM", type = DataStructureType.Unstructured, datasetid = @id }, new { @class = "bx-button function" })
            }
        </div>
    </div>


    @if (Model.Count > 0)
    {
        <table class="mmm-filter-table">
            <tr>
                <td class="mmm-filter">
                    <button id="showAll" class="mmm-filterbutton function left active" value="*">Show All</button>
                    <button class="mmm-filterbutton function middle" value=".video">Video</button>
                    <button class="mmm-filterbutton function middle" value=".image">Image</button>
                    <button class="mmm-filterbutton function middle" value=".audio">Audio</button>
                    <button class="mmm-filterbutton function right" value="*,.video,.audio,.image">Other</button>
                    <button class="mmm-layoutbutton function hidden">Layout</button>
                </td>
                @*<td>
                        <button class="function" id="mapView">Map View</button>
                    </td>*@
                <td class="mmm-sortdropdown">
                    Sort by
                    <select class="bx-dropdown mmm-dropdown">
                        <option value="">no Sorting</option>
                        <option class="type" value="type,true">Type &#xf106;</option>
                        <option class="type" value="type,false">Type &#xf107;</option>
                        <option class="name" value="name,true">Name &#xf106;</option>
                        <option class="name" value="name,false">Name &#xf107;</option>
                        <option class="size" value="size,true">Size &#xf106;</option>
                        <option class="size" value="size,false">Size &#xf107;</option>
                    </select>
                    <div class="t-arrow-down mmm-dropdownArrow"></div>
                </td>
            </tr>
        </table>
    }
    else
    {
        <span>No data uploaded.</span>
    }

    <div class="mmm-Container">
        @foreach (FileInformation fi in Model)
        {
            try
            {
                string fileSize = "";

                if (Math.Round((double)fi.Size / 1000000000, 2) > 1)
                {
                    fileSize = Math.Round((double)fi.Size / 1000000000, 2) + " GB";
                }
                else if (Math.Round((double)fi.Size / 1000000, 2) > 1)
                {
                    fileSize = Math.Round((double)fi.Size / 1000000, 2) + " MB";
                }
                else if (Math.Round((double)fi.Size / 1000, 2) > 1)
                {
                    fileSize = Math.Round((double)fi.Size / 1000, 2) + " KB";
                }
                else
                {
                    fileSize = Math.Round((double)fi.Size / 1, 2) + " Byte";
                }

                string type = @fi.MimeType.Substring(0, fi.MimeType.IndexOf('/'));
                <div class="mmm-mediaContainer @type">
                    <table>
                        <tr class="hidden">
                            <td id="Type">@type</td>
                            <td id="Name">@fi.Name</td>
                            <td id="Size">@fileSize</td>
                        </tr>
                        <tr>
                            @switch (type)
                            {
                                case "video":
                                    imgList += Server.UrlEncode(fi.Path) + ",";
                                    <td class="mmm-media" path="@Server.UrlEncode(fi.Path)" type="@type"></td>
                                    <td class="mmm-mediaInfo">
                                        <table>
                                            <tr>
                                                <td>Name</td>
                                                <td>@fi.Name</td>
                                            </tr>
                                            <tr>
                                                <td>Size</td>
                                                <td>@fileSize</td>
                                            </tr>
                                            @if (fi.EXIF != null && fi.EXIF.Count != 0)
                                            {
                                                if (fi.EXIF.ContainsKey("Video"))
                                                {
                                                    <tr>
                                                        <td>Resolution</td>
                                                        <td>@fi.EXIF["Video"]["Width"]px * @fi.EXIF["Video"]["Height"]px</td>
                                                    </tr>
                                                    <tr>
                                                        <td>Title</td>
                                                        <td>@fi.EXIF["Video"]["Title"]</td>
                                                    </tr>
                                                    <tr>
                                                        <td>Duration</td>
                                                        <td>@fi.EXIF["Video"]["Duration"]</td>
                                                    </tr>
                                                }
                                            }
                                        </table>
                                    </td>
                                    break;

                                case "audio":
                                    <td class="mmm-media" path="@Server.UrlEncode(fi.Path)" type="@type"></td>
                                    <td class="mmm-mediaInfo">
                                        <table>
                                            <tr>
                                                <td>Name</td>
                                                <td>@fi.Name</td>
                                            </tr>
                                            <tr>
                                                <td>Size</td>
                                                <td>@fileSize</td>
                                            </tr>
                                            @if (fi.EXIF != null && fi.EXIF.Count != 0)
                                            {
                                                if (fi.EXIF.ContainsKey("Audio"))
                                                {
                                                    <tr>
                                                        <td>Title</td>
                                                        <td>@fi.EXIF["Audio"]["Title"]</td>
                                                    </tr>
                                                    <tr>
                                                        <td>Duration</td>
                                                        <td>@fi.EXIF["Audio"]["Duration"]</td>
                                                    </tr>
                                                }
                                            }
                                        </table>
                                    </td>
                                    break;

                                case "image":
                                    imgList += Server.UrlEncode(fi.Path) + ",";
                                    <td class="mmm-media" path="@Server.UrlEncode(fi.Path)" type="@type"></td>
                                    <td class="mmm-mediaInfo">
                                        <table>
                                            <tr>
                                                <td>Name</td>
                                                <td>@fi.Name</td>
                                            </tr>
                                            <tr>
                                                <td>Size</td>
                                                <td>@fileSize</td>
                                            </tr>
                                            @if (fi.EXIF != null && fi.EXIF.Count != 0)
                                            {
                                                if (fi.EXIF.ContainsKey("JPEG"))
                                                {
                                                    if (fi.EXIF["JPEG"].ContainsKey("Image Width") && fi.EXIF["JPEG"].ContainsKey("Image Height"))
                                                    {
                                                        <tr>
                                                            <td>Resolution</td>
                                                            <td>@fi.EXIF["JPEG"]["Image Width"].Substring(0, fi.EXIF["JPEG"]["Image Width"].IndexOf(' '))px * @fi.EXIF["JPEG"]["Image Height"].Substring(0, fi.EXIF["JPEG"]["Image Height"].IndexOf(' '))px</td>
                                                        </tr>
                                                    }
                                                }
                                                if (fi.EXIF.ContainsKey("Exif IFD0") && fi.EXIF["Exif IFD0"].ContainsKey("Date/Time"))
                                                {
                                                    DateTime dateTime;
                                                    if (DateTime.TryParseExact(fi.EXIF["Exif IFD0"]["Date/Time"], "yyyy:MM:dd HH:mm:ss", CultureInfo.CurrentCulture, DateTimeStyles.None, out dateTime))
                                                    {
                                                        <tr>
                                                            <td>Creation Date</td>
                                                            <td>@dateTime</td>
                                                        </tr>
                                                    }
                                                }
                                                if (fi.EXIF.ContainsKey("GPS"))
                                                {
                                                    if (fi.EXIF["GPS"].ContainsKey("GPS Latitude Ref") && fi.EXIF["GPS"].ContainsKey("GPS Longitude Ref"))
                                                    {
                                                        lat = MetadataConverter.convertDegreeAngleToDouble(fi.EXIF["GPS"]["GPS Latitude Ref"] + fi.EXIF["GPS"]["GPS Latitude"]);
                                                        lon = MetadataConverter.convertDegreeAngleToDouble(fi.EXIF["GPS"]["GPS Longitude Ref"] + fi.EXIF["GPS"]["GPS Longitude"]);
                                                        <tr>
                                                            <td>Location</td>
                                                            <td id="location" lat="@lat" lon="@lon"><a href="https://www.google.com/maps/search/?api=1&query=@lat,@lon" target="_blank">@fi.EXIF["GPS"]["GPS Latitude"] @fi.EXIF["GPS"]["GPS Latitude Ref"], @fi.EXIF["GPS"]["GPS Longitude"] @fi.EXIF["GPS"]["GPS Longitude Ref"]</a></td>
                                                        </tr>
                                                    }
                                                    if (fi.EXIF["GPS"].ContainsKey("GPS Altitude"))
                                                    {
                                                        <tr>
                                                            <td>Altitude</td>
                                                            <td>@fi.EXIF["GPS"]["GPS Altitude"].Substring(0, fi.EXIF["GPS"]["GPS Altitude"].IndexOf(' '))m above @fi.EXIF["GPS"]["GPS Altitude Ref"] </td>
                                                        </tr>
                                                    }
                                                }
                                            }
                                        </table>
                                    </td>
                                    break;

                                case "application":

                                    if (fi.EXIF != null && fi.EXIF.Count != 0)
                                    {

                                        <td class="mmm-media" path="@Server.UrlEncode(fi.Path)" type="bundle"></td>
                                        <td class="mmm-mediaInfo">
                                            <table>
                                                <tr>
                                                    <td>Name</td>
                                                    <td>@fi.Name</td>
                                                </tr>
                                                <tr>
                                                    <td>Size</td>
                                                    <td>@fileSize</td>
                                                </tr>
                                                @if (fi.EXIF.ContainsKey("Bundle"))
                                                {
                                                    <tr>
                                                        <td>Title</td>
                                                        <td>@fi.EXIF["Bundle"]["Name"]</td>
                                                    </tr>
                                                    <tr>
                                                        <td>Description</td>
                                                        <td>@fi.EXIF["Bundle"]["Description"]</td>
                                                    </tr>
                                                }
                                            </table>
                                        </td>
                                    }
                                    else
                                    {
                                        <td class="mmm-media" path="@Server.UrlEncode(fi.Path)" type="@type"></td>
                                        <td class="mmm-mediaInfo">
                                            <table>
                                                <tr>
                                                    <td>Name</td>
                                                    <td>@fi.Name</td>
                                                </tr>
                                                <tr>
                                                    <td>Size</td>
                                                    <td>@fileSize</td>
                                                </tr>
                                            </table>
                                        </td>
                                    }
                                    break;

                                default:
                                    <td class="mmm-media" path="@Server.UrlEncode(fi.Path)" type="@type"></td>
                                    <td class="mmm-mediaInfo">
                                        <table>
                                            <tr>
                                                <td>Name</td>
                                                <td>@fi.Name</td>
                                            </tr>
                                            <tr>
                                                <td>Size</td>
                                                <td>@fileSize</td>
                                            </tr>
                                        </table>
                                    </td>
                                    break;
                            }
                            <td class="mmm-functions">
                                @if (datasetInfo.Deleteable && datasetInfo.IsLatestVersion)
                                {
                                    <span class="bx bx-grid-function bx fa-trash-o bx-mmm-delete" value="@fi.Path"></span>
                                }
                                @if (datasetInfo.Downloadable)
                                {
                                    @Html.ActionLink(" ", "getFile", "ShowMultimediaData", new { path = @Server.UrlEncode(fi.Path) }, new { area = "MMM", @class = "bx bx-grid-function bx-download" })
                                }
                            </td>
                        </tr>
                    </table>
                </div>
            }
            catch
            {
                <script type="text/javascript">
                console.log('@fi.Name not found')
                </script>
            }
        }
    </div>



    <script type="text/javascript">

    $.ajaxSetup({ cache: false });

    var imgList = '@imgList';
        imgList = imgList.split(',');
        imgList.splice(-1, 1);
    var test = 0;

    $('.bx-mmm-delete').on('click', function () {
        var mediaContainer = $(this);
        var parameters = encodeURI('?path=' + mediaContainer.attr('value'));
        $.get('@Url.Action("deleteFile", "ShowMultimediaData")' + parameters, function (data) {
            console.log(data);
            if (data.toLowerCase() == 'true') {
                mediaContainer.closest('.mmm-mediaContainer').remove();
            }
            else {
                alert("Can't delete file " + mediaContainer.attr('value'));
            }
            initIsotope();
        });
    });


    $(function () {
        $('body').append('<div class="modal fade" id="imgModal" tabindex="-1" aria-hidden="true"><div class= "modal-body"> <div id="header"><button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button></div> <div id="content"><table><tr><td class="mmm-map"><div id="map"></div></td></tr></table></div></div ></div> ');
        initIsotope();
        $.each($('.mmm-media'), function () {
            var item = $(this)
            var parameters = encodeURI('/?path=' + $(item).attr('path') + '&type=' + $(item).attr('type'));
            $.get('@Url.Action("getFilePreview", "ShowMultimediaData", new { area = "MMM" } )' + parameters, function (data) {
                if ($(data) != null && $(data).length > 0) {
                    $(item).append(data);
                    $('.mmm-layoutbutton').trigger('click');
                }
            });
        });
    });

    //$('#mapView').on('click', function () {
    //    var path = '';
    //    $('.mmm-Container .mmm-mediaContainer').each(function () {
    //        if ($(this).find('.mmm-media').attr('type') == 'image') {
    //            path = $(this).find('.mmm-media').attr('path');
    //            $(this).find('.mmm-mediaInfo td').each(function () {
    //                if($(this).attr('id') == 'location') {
    //                    console.log(path + ',' +$(this).attr('lat') +',' + $(this).attr('lon'));
    //                }
    //            });
    //        }
    //    });
    //    $('#imgModal').modal('toggle');
    //});

    $('.mmm-media').on('click', function () {
        if ($(this).attr('type').toLowerCase() == "image") { //|| $(this).attr('type').toLowerCase() == "video") {
            openImg($(this).attr('path'));
        }
        else if ($(this).attr('type').toLowerCase() == "bundle") {
            openBundle($(this).attr('path'));
        }
    });

    function openImg(path) {
        loadImg(path);
        $('#imgModal').modal('toggle');
    }

    function openBundle(path) {
        loadBundle(path);
        $('#imgModal').modal('toggle');
    }

    function loadImg(path) {
        var parameters = encodeURI('/?path=' + path);
        $.get('@Url.Action("ImageView", "ShowMultimediaData", new { area = "MMM" } )' + parameters, function (data) {
            $('#imgModal .modal-body #content').html(data);
            initImgWindow();
            layoutImgWindow();
            //setTimeout(function () { initMiniMap() }, 200);
        });
    }

    function loadBundle(path) {
        var parameters = encodeURI('/?path=' + path);
        $.get('@Url.Action("BundleView", "ShowMultimediaData", new { area = "MMM" } )' + parameters, function (data) {
            $('#imgModal .modal-body #content').html(data);
            layoutImgWindow();
            setTimeout(function () {
                var parameters = encodeURI('/?path=' + $('#overlay').attr('path') + '&name=' + $('#overlay').attr('name'));
                $.get('@Url.Action("overlayBinding", "ShowMultimediaData", new { area = "MMM"} )' + parameters, function (data) {
                    $('#overlay').html(data);
                    $('#overlay').css({ 'max-height': parseInt(window.innerHeight * 0.8) + 'px', 'transform': 'translate(0px, ' + -$('#image').height() + 'px)', 'max-height': '0px' });
                    $('#overlay svg').css({ 'transform': 'matrix(' + $('#image').width() / $('#overlay svg').width() + ', 0, 0, ' + $('#image').height() / $('#overlay svg').height() + ', 0, ' + - parseInt(($('#overlay svg').height() - $('#overlay svg').height() * $('#image').height() / $('#overlay svg').height()) / 2) + ')' });
                    initBundle();
                });
            }, 200);
        });
    }

    function initBundle() {
        $('#imgModal .modal-body #content .bundleThumbnailView').css({ 'max-height': parseInt(window.innerHeight * 0.8) + 'px' });
        $('#imgModal .modal-body #content .bundleThumbnailView div').css({ 'max-height': parseInt(window.innerHeight * 0.8) + 'px' });

        $('.mmm-image-content .mmm-exif .mmm-values td').each(function () {
            if (parseFloat($(this).text()) == -1) {
                $(this).text('-');
                $(this).css({ 'text-align': 'center'})
            }
        });

        $('.mmm-image-content .mmm-image #overlay svg polygon').on('mouseenter', function (e) {
            $('.mmm-image-content .mmm-exif table#t_' + e.target.id.split('_')[1]).css({ 'background-color': 'rgba(100, 100, 100, 0.8);' })
        });

        $('.mmm-image-content .mmm-image #overlay svg polygon').on('mouseleave', function (e) {
            $('.mmm-image-content .mmm-exif table#t_' + e.target.id.split('_')[1]).removeAttr('style')
        });

        $('.mmm-image-content .bundleThumbnailView .thumbnail').on('click', function () {
            //loadBundle($(this).attr('path'));
        });
    }

    function initImgWindow()
    {
        $('#imgModal .modal-body #content .mmm-image').on('click', '#prevImg', function () {
            $('#imgModal .modal-body #content:first-child').remove();
            loadImg($(this).attr('path'));
        });

        $('#imgModal .modal-body #content .mmm-image').on('click', '#nextImg', function () {
            $('#imgModal .modal-body #content:first-child').remove();
            loadImg($(this).attr('path'));
        });
    }

    function layoutImgWindow()
    {
        $('#imgModal .modal-body #content .mmm-exif div').css({ 'max-height': parseInt(window.innerHeight * 0.8 - 12) + 'px' });
        //$('#imgModal .modal-body #content .mmm-map #map').css({ 'height': parseInt(window.innerHeight * 0.4) + 'px' });
        $('#imgModal .modal-body #content .mmm-image').css({ 'height': parseInt(window.innerHeight * 0.8) + 'px'});
        $('#imgModal .modal-body #content .mmm-image img').css({ 'max-height': parseInt(window.innerHeight * 0.8 - 12) + 'px' });
        $('#imgModal .modal-body #content .mmm-image video').css({ 'max-height': parseInt(window.innerHeight * 0.8 - 12) + 'px' });

        var path = $('#imgModal .modal-body #content .mmm-image').attr('path');

        for (var i = 0; i < imgList.length; i++) {
            if (imgList[i].toLowerCase() == path.toLowerCase()) {
                if (i > 0)
                    $('#imgModal .modal-body #content .mmm-image #prevImg').attr('path', imgList[i - 1]);
                else
                    $('#imgModal .modal-body #content .mmm-image #prevImg').attr('path', imgList[imgList.length - 1]);

                if (i < imgList.length - 1)
                    $('#imgModal .modal-body #content .mmm-image #nextImg').attr('path', imgList[i + 1]);
                else
                    $('#imgModal .modal-body #content .mmm-image #nextImg').attr('path', imgList[0]);
            }
        }

        $('#imgModal .mmm-image-content .mmm-image #nextImg').css({ 'display': 'inline' });
    }

    //function initMiniMap() {
    //    var lat = parseFloat($('#imgModal .modal-body #content .mmm-image').attr('lat'));
    //    var lon = parseFloat($('#imgModal .modal-body #content .mmm-image').attr('lon'));
    //    if (isNaN(lat) && isNaN(lon)) {
    //        lat = 0;
    //        lon = 0;
    //        $('#imgModal .modal-body #content .mmm-map').css({ 'display': 'none' });
    //    }
    //    else {
    //        $('#imgModal .modal-body #content .mmm-map').css({ 'display': 'block' });
    //    }
    //        var point = { lat: lat, lng: lon };
    //        var map = new google.maps.Map(document.getElementById('map'), {
    //            zoom: 10,
    //            center: point
    //        });
    //        var marker = new google.maps.Marker({
    //            position: point,
    //            map: map
    //        });
    //}

    function initIsotope() {
        // init Isotope
        var $mediaGrid = $('.mmm-Container').isotope({
            itemSelector: '.mmm-mediaContainer',
            layoutMode: 'vertical',
            transitionDuration: '0.5s',
            getSortData: {
                type: '#Type',
                name: '#Name',
                size: '#Size',
                category: '[data-category]',
            }
        });

        $('.mmm-sortdropdown').on('change', 'select', function () {
            var sortValue = $(this).val().split(',');
            $mediaGrid.isotope({ sortBy: sortValue[0], sortAscending: (sortValue[1] == 'true') });
        });

        $('.mmm-layoutbutton').on('click', function () {
            $mediaGrid.isotope('layout');
        });

        $('.mmm-filterbutton').on('click', function () {
            $('.mmm-filterbutton').removeClass('active');
            $(this).addClass('active');
            var filter = "";
            var filerValue = $(this).val().split(',');
            if (filerValue.length > 1) {
                filter += filerValue[0] + ':not(';
                for (var i = 1; i < filerValue.length; i++) {
                    if (i < filerValue.length - 1)
                        filter += filerValue[i] + ', ';
                    else
                        filter += filerValue[i] + ')';
                }
            }
            else {
                filter = filerValue[0];
            }
            $mediaGrid.isotope({ filter: filter });

        });
    }
    </script>
    @*<script async defer src="https://maps.googleapis.com/maps/api/js?key= GOOGLE API KEY HERE &callback=initMiniMap"></script>*@
