@using BExIS.Modules.Dim.UI.Models.Mapping
@using Telerik.Web.Mvc.UI
@model MappingMainModel

<div id="DIM_MappingContainer">

    @{
        ViewBag.Title = "Metadata Structure Mapping";
        ViewData["SelectionList"] = Model.SelectionList;
        Session["SelectionList"] = Model.SelectionList;
    }
    @section Information
    {
        Here you are able to create/edit mappings between two metadata structures or a metadata structure and system information defined in other modules (e.g. party package).
        <p><a href="/DIM/Help/Index/#_mapping" class="bx-informationLink" title="go to help" target="_blank">More</a></p>
    }

    @section Scripts{

        <link href="@Url.Content("~/Areas/DIM/Content/DIM/bexis-dim.css")" rel="stylesheet" type="text/css" />

        <script src="@Url.Content("~/Areas/DIM/Scripts/DIM/bexis.dim.mapping.js")"></script>
        <script src="@Url.Content("~/Areas/DIM/Scripts/DIM/isotope.pkgd.min.js")"></script>
        <script src="@Url.Content("~/Areas/DIM/Scripts/DIM/jsPlumb-2.2.8-min.js")"></script>
    }

    @section LeftPane
    {

        @if (Model.Source != null)
        {
        @Html.Partial("LinkElemenRoot", Model.Source)
        }
    }

    <button onclick="switchSide()" class="bx-button fa fa-exchange function"></button>

    <div id="mapping-stats-button" class="btn btn-danger pull-right" style="display:none" onclick='$("#mapping-stats-missed").toggle()'>
        <b>required mappings</b> <span id="mapping-stats-value" class="badge"></span>
    </div>

    <p id="mapping-stats-missed" class="pull-right" style="display:none; padding-right:20px;"></p>

    @Html.Partial("Mappings", Model.ParentMappings)

    @section RightPane
    {

        @if (Model.Target != null)
        {
        @Html.Partial("LinkElemenRoot", Model.Target, new ViewDataDictionary() { { "SelectionList", Model.SelectionList }, { "test", "test" } })
        }
    }
</div>

<script type="text/javascript">

    function onChangeTargetDropDown(e) {
        var substr = e.value;
        var id = substr.split("_")[0];
        var type = substr.split("_")[1];

        var source = $("#le-root-source")[0];
        var sourceInfo = $(source).find(".le-root-info")[0];
        var sourceId = $(sourceInfo).find("#Id").text();
        var sourceType = $(sourceInfo).find("#Type").text();

        //long sourceId, long targetId = 0, LinkElementType type = LinkElementType.System
        var sendData =
        {
            "sourceId": sourceId,
            "targetId": id,
            "sourceType": sourceType,
            "targetType": type,
            "position": "Target"
        }

        console.log("senddata", sendData)

        $("#le-root-target").preloader(12, "Loading Target");

        $("#dim-mapping-middle").preloader(12, "Loading Mappings");

        reloadSite("le-root-target", sendData);

        reloadMapping("dim-mapping-middle", sendData);

        $("#mapping-stats-button").hide();
    }

    function onChangeSourceDropDown(e) {

        var substr = e.value;
        var id = substr.split("_")[0];
        var type = substr.split("_")[1];
        console.log("substr", substr);
        console.log("type", type);
        console.log("id", id);

        var target = $("#le-root-target");
        console.log(target);
        var targetId = $(target).attr("id").split("_")[1];
        var targetInfo = $(target).find(".le-root-info")[0];
        var targetType = $(targetInfo).find("#Type").text();

        //long sourceId, long targetId = 0, LinkElementType type = LinkElementType.System
        var sendData =
        {
            "sourceId": id,
            "targetId": targetId,
            "sourceType": type,
            "targetType": targetType,
            "position": "Source"

        }

        $("#le-root-source").preloader(12, "Loading Source");

        $("#dim-mapping-middle").preloader(12, "Loading Mappings");

        reloadSite("le-root-source", sendData);

        reloadMapping("dim-mapping-middle", sendData);

    }

    function reloadSite(id, senddata) {
        $.ajax({
            type: "POST",
            url: "/DIM/Mapping/ReloadTarget",
            contentType: "application/json; charset=utf-8",
            dataType: "html",
            data: JSON.stringify(senddata),
            success: function (data) {
                $("#" + id).replaceWith(data);
            },
            error: function (data) { alert("error") }
        });
    }

    function reloadMapping(id, senddata) {
        $.ajax({
            type: "POST",
            url: "/DIM/Mapping/ReloadMapping",
            contentType: "application/json; charset=utf-8",
            dataType: "html",
            data: JSON.stringify(senddata),
            success: function (data) {
                $("#" + id).replaceWith(data);

                setTimeout(function () {
                    console.log("reload mappings")
                    reloadAllConnections();
                }, 100);

            },
            error: function (data) { alert("error") }
        });
    }

    function switchSide() {
        var source = $("#le-root-source")[0];
        console.log("source", source);
        var sourceInfo = $(source).find(".le-root-info")[0];
        var sourceId = $(sourceInfo).find("#Id").text();
        var sourceType = $(sourceInfo).find("#Type").text();

        var target = $("#le-root-target")[0];
        console.log("target", target);
        var targetInfo = $(target).find(".le-root-info")[0];
        console.log("info", targetInfo);
        var targetId = $(targetInfo).find("#Id").text();
        var targetType = $(targetInfo).find("#Type").text();

        console.log("info_id", targetId);
        console.log("info_type", targetType);

        var switchedData =
        {
            "sourceId": targetId,
            "targetId": sourceId,
            "sourceType": targetType,
            "targetType": sourceType,
            "position": "Target"
        }

        var switchedDataSource =
        {
            "sourceId": targetId,
            "targetId": sourceId,
            "sourceType": targetType,
            "targetType": sourceType,
            "position": "Source"
        }

        var switchedDataTarget =
        {
            "sourceId": targetId,
            "targetId": sourceId,
            "sourceType": targetType,
            "targetType": sourceType,
            "position": "Target"
        }

        $("#le-root-source").preloader(12, "Loading Source");
        $("#le-root-target").preloader(12, "Loading Source");

        $("#dim-mapping-middle").preloader(12, "Loading Mappings");

        reloadSite("le-root-source", switchedDataSource);

        reloadSite("le-root-target", switchedDataTarget);

        reloadMapping("dim-mapping-middle", switchedData);

        updateRequiredMappings();
    }
</script>