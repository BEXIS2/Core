@using BExIS.Modules.Dim.UI.Models.Mapping
@using Telerik.Web.Mvc.UI

@model LinkElementRootModel
@{
    string searchId = "le-root-search-filter-" + Model.Position;
    string id = "le-root-" + Model.Position.ToString().ToLower();

    List<LinkElementRootListItem> list = (List<LinkElementRootListItem>)Session["SelectionList"];
}

<div id="@id" class="le-root @Model.Position dim-Container">

    <div class="le-root-info" style="display: none">
        <div id="Id">@Model.Id</div>
        <div id="Name">@Model.Name</div>
        <div id="ElementId">@Model.ElementId</div>
        <div id="Type">@Model.Type</div>
        <div id="Position">@Model.Position</div>
        <div id="Url">@Model.Url</div>
    </div>

    @if (Model.Position == LinkElementPostion.Target && list != null)
            {

    @(Html.Telerik().DropDownList()
                                        .Name("SelectTarget")
                                        .Placeholder("Select")
                                        .HtmlAttributes(new { @class = "bx-dropdown", style = "width:100%;" })
                                        .ClientEvents(events => events.OnChange("onChangeTargetDropDown"))
                                        .BindTo(new SelectList(list, "Id", "Name", Model.ElementId + "_" + Model.Type)))
            }
            else
            {
    <div class="le-root-header">
        <b> @Model.Name</b>
    </div>
            }

    <div class="le-root-description">
        @Model.Description
    </div>

    <div class="le-root-search">

        @Html.TextBox(searchId, "", new { @class = "bx-input le-search", style = "width:100%" })
    </div>
    <div class="le-root-prefilter">

        @if (Model.Name.Equals("System"))
        {
        <span>@Html.CheckBox("Key", true, new { @class = "prefilter" }) Key </span>
        <span>@Html.CheckBox("Party", true, new { @class = "prefilter" }) Party </span>
        <span>@Html.CheckBox("Entity", true, new { @class = "prefilter" }) Entity </span>
        }

        @if (Model.Type.ToString().Contains("Metadata"))
        {
        @*<span>@Html.CheckBox("Type", true, new { @class = "prefilter"}) Type </span>*@
        <span>@Html.CheckBox("Usage", true, new { @class = "prefilter" }) Usage </span>
        <span>@Html.CheckBox("Default", true, new { @class = "prefilter" }) Default </span>
        }
    </div>

    <div class="le-root-content">

        @foreach (var child in Model.LinkElementContainers)
        {
        @Html.Partial("LinkElementContainer", child)
        }
    </div>
</div>
<script type="text/javascript">

    var position = '@Model.Position';
    var identifer = ".le-container-content-" + position;
    var identiferSimple = ".le-simple-" + position;

    $(document)
        .ready(function () {
            initIsotope(identiferSimple);

        });
</script>